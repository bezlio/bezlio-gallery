{
    "items": [
        {
            "itemId": "crystal-reports-viewer-web-mobile-iphone-ipad-android",
            "itemName": "Crystal Reports Viewer",
            "featured": true,
            "itemDescription": "This Bezl allows you to run any Crystal Reports with fresh data directly within Bezlio.  Regardless of your device (iPhone, iPad, Android, PC, or Mac) you will be able to run your Crystal Reports from anywhere with refreshed data.  Reports have parameters?  No problem!  When the reports are published to Bezlio (as simple putting them in a folder in your network) we dynamically look for parameters and will prompt for them using mobile-friendly inputs.  Once you are viewing the report in Bezlio you can then export it to a variety of formats including Excel and PDF.",
            "thumbnailPath": "http://bezlio-gallery.azurewebsites.net/crystal-reports-viewer/images/thumb.png",
            "thumbnailAltText": "Screenshot showing a Crystal Report presented within Bezlio.",
            "itemImages": [
                {
                    "imagePath": "http://bezlio-gallery.azurewebsites.net/crystal-reports-viewer/images/main.png",
                    "imageAltText": "Screenshot showing a Crystal Report presented within Bezlio."
                },
                {
                    "imagePath": "http://bezlio-gallery.azurewebsites.net/crystal-reports-viewer/images/iphone.png",
                    "imageAltText": "Screenshot showing Crystal Reports on an iPhone."
                },
                {
                    "imagePath": "http://bezlio-gallery.azurewebsites.net/crystal-reports-viewer/images/parameters.png",
                    "imageAltText": "Screenshot showing report listing."
                },
                {
                    "imagePath": "http://bezlio-gallery.azurewebsites.net/crystal-reports-viewer/images/export.png",
                    "imageAltText": "Screenshot showing how you can export to Excel, PDF, Word all from within Bezlio."
                }
            ],
            "itemVideos": [],
            "roles": ["common"],
            "platforms": ["universal"],
            "path": "crystal-reports-viewer",
            "additionalFiles": [],
            "installationNotes": {
                "intro": "The default installation of BRDB with the Crystal Reports plugin expects your published reports to be placed at C:\\Program Files (x86)\\Bezlio Remote Data Broker\\CrystalReports\\ and not require credentials.  To change these settings or understand more about the plugin, review it's documentation <a href=\"https://github.com/bezlio/bezlio-plugins/tree/master/Plugins/CrystalReports\" target=\"_blank\"><u>here</u></a>."
            }
        },
        {
            "itemId": "inventory-valuation-by-age",
            "itemName": "Inventory Valuation By Age",
            "featured": true,
            "itemDescription": "This Bezl uses a tree map to help visualize both the cost and age of inventory by warehouse into a single view.  Each warehouse is represented as a container with boxes within for each item in that warehouse.  The larger the box for a given item, the greater the cost associated.  And the color of the box goes from white to red based on relative age.  This clever visualization allows a user to instantly guage and compare the health of warehouses by how 'red' they are and then dig deeper by hovering over the biggest, reddest boxes to find the problems.",
            "thumbnailPath": "http://bezlio-gallery.azurewebsites.net/inventory-valuation-by-age/images/thumb.png",
            "thumbnailAltText": "Screenshot showing inventory valuation over 4 fictional warehouses",
            "itemImages": [
                {
                    "imagePath": "http://bezlio-gallery.azurewebsites.net/inventory-valuation-by-age/images/main.png",
                    "imageAltText": "Screenshot showing inventory valuation over 4 fictional warehouses"
                }
            ],
            "itemVideos": [],
            "roles": [ "executive-ceo", "executive-cfo", "purchasing", "production-plant-manager", "sales-manager"],
            "platforms": ["excel","epicor905","epicor10"],
            "path": "inventory-valuation-by-age",
            "additionalFiles": [
                {
                    "fileName": "inventory.xlsx",
                    "filePath": "http://bezlio-gallery.azurewebsites.net/inventory-valuation-by-age/data/inventory.xlsx",
                    "description": "Sample Excel data source for this Bezl.  Installed by default with latest version of BRDB."
                },
                {
                    "fileName": "Epicor10.sql",
                    "filePath": "http://bezlio-gallery.azurewebsites.net/inventory-valuation-by-age/queries/Epicor10.sql",
                    "description": "SQL Server query for Epicor ERP 10.X."
                },
                {
                    "fileName": "Epicor905.sql",
                    "filePath": "http://bezlio-gallery.azurewebsites.net/inventory-valuation-by-age/queries/Epicor905.sql",
                    "description": "SQL Server query for Epicor ERP 9.05 and prior."
                }
            ],
            "installationNotes": {
                "intro": "When you install this Bezl it will by default point to inventory.xlsx which should already be present on your BRDB server.  If you wish to point to a different data source, refer to our <a href=\"https://github.com/bezlio/bezlio-gallery/wiki/Changing-Data-Connections-on-Bezls\" target=\"_blank\"><u>standard steps</u></a> for changing data connections.  Required columns names are Location, Product, Age, and Cost."
            }
        },
        {
            "itemId": "production-scheduling-board-web-mobile-iphone-ipad-android",
            "itemName": "Production Scheduling Board",
            "featured": true,
            "itemDescription": "This Bezl allows a production scheduler to assign / prioritize jobs across shop resources in real time.  The drag and drop interface works on any device, so put an iPad in your schedulers hands and let them schedule directly on the shop floor!",
            "thumbnailPath": "http://bezlio-gallery.azurewebsites.net/production-scheduling-board/images/thumb.png",
            "thumbnailAltText": "Screenshot showing a selected work center and the various resources to schedule across",
            "itemImages": [
                {
                    "imagePath": "http://bezlio-gallery.azurewebsites.net/production-scheduling-board/images/main.png",
                    "imageAltText": "Screenshot showing a selected work center and the various resources to schedule across"
                }
            ],
            "itemVideos": [],
            "roles": [ "production-plant-manager", "production-scheduler" ],
            "platforms": [ "excel" ],
            "path": "production-scheduling-board",
            "additionalFiles": [
                {
                    "fileName": "production.xlsx",
                    "filePath": "http://bezlio-gallery.azurewebsites.net/production-scheduling-board/data/production.xlsx",
                    "description": "Sample Excel data source for this Bezl.  Installed by default with latest version of BRDB."
                }
            ],
            "installationNotes": {
                "intro": "When you install this Bezl it will by default point to production.xlsx which should already be present on your BRDB server.  If you wish to point to a different data source, refer to our <a href=\"https://github.com/bezlio/bezlio-gallery/wiki/Changing-Data-Connections-on-Bezls\" target=\"_blank\"><u>standard steps</u></a> for changing data connections.  This Bezl has two data subscriptions that can be edited.  First is JobSchedule and this should represent a listing of each job that is currently active on the shop floor.  The required columns are:<br><br><table><tr><td>Location</td><td>Intended to represent some physical location where this job is located for filtering purposes.  This could be a physical location or any other subclassification desired for jobs.</td></tr><tr><td>JobNumber</td><td>The job number.  If you build assemblies you may wish to concatenate the assembly sequence into this column.</td></tr><tr><td>JobDesc</td><td>A text description for the given job.  Typically you might consider putting the finished goods part description here.</td></tr><tr><td>JobNumber</td><td>The job number.  If you build assemblies you may wish to concatenate the assembly sequence into this column.</td></tr><tr><td>CustomerName</td><td>The name of the customer this job is for.</td></tr><tr><td>DueDate</td><td>The due date for the given job operation.  Since a job may have multiple operations, it may also have separate due dates for each.</td></tr><tr><td>WorkCenter</td><td>Similar to Location, this column allows you to categorize your job operations according to the work centers they belong.</td></tr><tr><td>ResourceID</td><td>If the operation is already scheduled to a resource, that ID should be presented here so it shows in the correct column on the dashboard.  If no resource is assigned, leave this field blank.</td></tr><tr><td>ResourceSequence</td><td>If this operation has already been scheduled to a resource, this is the numeric ordering of priority the resource should process this operation in relation to others.  Typical sequencing would be 10,20,30 but any integer values will do.</td></tr><tr><td>ReqQty</td><td>The quantity originally due for this operation.</td></tr><tr><td>CompleteQty</td><td>The quantity already completed at this operation.</td></tr><tr><td>DueToday</td><td>A helper column that gives us a true / falst to know if the operation is due today.  This causes the due date field to show as yellow if true.</td></tr><tr><td>PastDue</td><td>Another helper column to let us know if the given operation is past due.  If this column is true, we show the due date column as red.</td></tr><tr><td>UniqueID</td><td>Some sort of unique value to identify this job and operation row.  In our Excel sample we make this simply the job number concatenated with the JobSequence.</td></tr></table><br><br>The other table this Bezl uses provides the list of available shop resources for assignment to.  The required columns are:<br><br><table><tr><td>Location</td><td>Intended to represent some physical location where this resource is located for filtering purposes.  This could be a physical location or any other subclassification desired for resources.</td></tr><tr><td>ResourceID</td><td>The ID for a given resource.  This should have no spaces.</td></tr><tr><td>ResourceName</td><td>A descriptive name for the resource where spaces are allowed.</td></tr><tr><td>WorkCenter</td><td>Similar to Location, this column allows you to categorize your resources according to the work centers they belong.</td></tr></table>"
            }
        }
    ]
}