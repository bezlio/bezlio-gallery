{
  "id": "7383f8fb-945f-4c84-b1e3-d1da25065f5a",
  "name": "Accounts View",
  "template": "custom",
  "owner": "sales-rep@bezl.io",
  "shares": [],
  "vars": [],
  "dataSubscriptions": [],
  "markup": [
    "<style>",
    "  .btn.btn-mobile {",
    "  \tpadding-left: 6px;",
    "    padding-right: 6px;",
    "    width: 90px;",
    "  }",
    "  .no-gutters {",
    "   padding-left: 0px;",
    "   padding-right: 0px;",
    "  }",
    "  input[type=search]::-webkit-search-cancel-button {",
    "    -webkit-appearance: searchfield-cancel-button;",
    "  }",
    "</style>",
    "",
    "<!-- Filter box and refresh button -->",
    "<div class=\"row\">",
    "  <div class=\"col-sm-10\">",
    "    <!-- Filter input box -->",
    "    <input class=\"form-control\" id=\"filterString\" type=\"search\" incremental=\"true\" placeholder=\"Filter...\" [(ngModel)]=\"bezl.vars.filterString\" (search)=\"bezl.functions['onFilterChange']()\">",
    "  </div>",
    "  <div class=\"col-sm-2\">",
    "    <!-- Loading / Refresh -->",
    "    <label class=\"pull-right\" [hidden]=\"!bezl.vars.loading\">Loading... <i class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i></label>",
    "    <button (click)=\"bezl.functions['refresh']()\" *ngIf=\"!bezl.vars.loading\" class=\"btn btn-md btn-default pull-right\">Refresh</button>",
    "  </div>",
    "</div>",
    "<!-- END: Filter box and refresh button -->",
    "",
    "<table class=\"table table-hover table-striped\">",
    "  <thead>",
    "    <tr>",
    "      <th>",
    "        <div class=\"row\">",
    "          <!-- Column header buttons -->",
    "          <div class=\"col-sm-2 no-gutters\">",
    "            <button type=\"button\"",
    "                    (click)=\"bezl.functions['sort']('ID')\"",
    "                    class=\"btn btn-default btn-block\">",
    "              <span class=\"pull-left\">ID</span>",
    "              <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                 *ngIf=\"bezl.vars.sortCol == 'ID' && bezl.vars.sort == 'asc'\"></i>",
    "              <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                 *ngIf=\"bezl.vars.sortCol == 'ID' && bezl.vars.sort == 'desc'\"></i>",
    "            </button>",
    "          </div>",
    "          <div class=\"col-sm-3 no-gutters\">",
    "            <button type=\"button\" ",
    "                    (click)=\"bezl.functions['sort']('Name')\"",
    "                    class=\"btn btn-default btn-block\">",
    "              <span class=\"pull-left\">Name</span>",
    "              <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                 *ngIf=\"bezl.vars.sortCol == 'Name' && bezl.vars.sort == 'asc'\"></i>",
    "              <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                 *ngIf=\"bezl.vars.sortCol == 'Name' && bezl.vars.sort == 'desc'\"></i>",
    "            </button>",
    "          </div>",
    "          <div class=\"col-sm-2 no-gutters\">",
    "            <button type=\"button\" ",
    "                    (click)=\"bezl.functions['sort']('Territory')\"",
    "                    class=\"btn btn-default btn-block\">",
    "              <span class=\"pull-left\">Territory</span>",
    "              <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                 *ngIf=\"bezl.vars.sortCol == 'Territory' && bezl.vars.sort == 'asc'\"></i>",
    "              <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                 *ngIf=\"bezl.vars.sortCol == 'Territory' && bezl.vars.sort == 'desc'\"></i>",
    "            </button>",
    "          </div>",
    "          <div class=\"col-sm-2 no-gutters\">",
    "            <button type=\"button\" ",
    "                    (click)=\"bezl.functions['sort']('LastContact')\"",
    "                    class=\"btn btn-default btn-block\">",
    "              <span class=\"pull-left\">Last Contact</span>",
    "              <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                 *ngIf=\"bezl.vars.sortCol == 'LastContact' && bezl.vars.sort == 'asc'\"></i>",
    "              <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                 *ngIf=\"bezl.vars.sortCol == 'LastContact' && bezl.vars.sort == 'desc'\"></i>",
    "            </button>",
    "          </div>",
    "          <div class=\"col-sm-2 no-gutters\">",
    "            <button type=\"button\" ",
    "                    (click)=\"bezl.functions['sort']('NextTaskDue')\"",
    "                    class=\"btn btn-default btn-block\">",
    "              <span class=\"pull-left\">Task Due</span>",
    "              <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                 *ngIf=\"bezl.vars.sortCol == 'NextTaskDue' && bezl.vars.sort == 'asc'\"></i>",
    "              <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                 *ngIf=\"bezl.vars.sortCol == 'NextTaskDue' && bezl.vars.sort == 'desc'\"></i>",
    "            </button>",
    "          </div>",
    "          <div class=\"col-sm-1 no-gutters\">",
    "            <button type=\"button\" ",
    "                    (click)=\"bezl.functions['sort']('Distance')\"",
    "                    class=\"btn btn-default btn-block\">",
    "              <span class=\"pull-left\">Dist</span>",
    "              <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                 *ngIf=\"bezl.vars.sortCol == 'Distance' && bezl.vars.sort == 'asc'\"></i>",
    "              <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                 *ngIf=\"bezl.vars.sortCol == 'Distance' && bezl.vars.sort == 'desc'\"></i>",
    "            </button>",
    "          </div> ",
    "          <!-- END: Column header buttons -->",
    "          ",
    "        </div>",
    "      </th>",
    "    </tr>",
    "  </thead>",
    "  <tbody>",
    "    <template ngFor let-acct [ngForOf]=\"bezl.data.Accounts\" let-i=\"index\">",
    "      <tr class=\"read\"",
    "         [ngClass]=\"{'default': acct.AccountType=='Customer', 'success':acct.AccountType!='Customer'}\" ",
    "          *ngIf=\"acct.show\">",
    "        <td>",
    "          <!-- Main row level -->",
    "          <div class=\"row\" (click)=\"bezl.functions['selectRow'](acct)\" *ngIf=\"acct.show\">",
    "            <div class=\"col-sm-2\">",
    "              <i class=\"fa fa-chevron-right\" aria-hidden=\"true\" *ngIf=\"!acct.Selected\"></i>",
    "              <i class=\"fa fa-chevron-down\" aria-hidden=\"true\" *ngIf=\"acct.Selected\"></i>",
    "              {{acct.ID}}",
    "            </div>",
    "            <div class=\"col-sm-3\">{{acct.Name}}</div>",
    "            <div class=\"col-sm-2\">{{acct.Territory}}</div>",
    "            <div class=\"col-sm-2\">{{acct.LastContact | date }}</div>",
    "            <div class=\"col-sm-2\">{{acct.NextTaskDue | date }}</div>",
    "            <div class=\"col-sm-1\">{{acct.Distance}} mi.</div>            ",
    "          </div>",
    "          <!-- END: Main row level -->",
    "          ",
    "          <!-- Drill down row 1 -->",
    "          <div class=\"row\" *ngIf=\"acct.Selected && acct.show\" style=\"margin-left:5px;margin-top:10px\">",
    "            ",
    "          \t<!-- Action buttons -->",
    "            <div class=\"col-sm-2\">",
    "              ",
    "              <div class=\"panel panel-primary\">",
    "                <div class=\"panel-heading\">",
    "                  <h4 class=\"panel-title\">View</h4>",
    "                </div>",
    "                <div class=\"panel-body\">",
    "                  <div class=\"row\">",
    "                    <button (click)=\"bezl.functions['clickCallLog'](acct)\" ",
    "                            class=\"btn btn-md btn-default\"",
    "                            style=\"margin-top:10px; width: 100%\">",
    "                      <i class=\"fa fa-phone\" aria-hidden=\"true\"></i><span style=\"color:blue\"> Call Log</span>",
    "                    </button>  ",
    "                  </div>",
    "                </div>",
    "              </div>",
    "            </div>",
    "            <!-- END: Action buttons -->",
    "            ",
    "            <!-- Address -->      ",
    "            <div class=\"col-sm-2\">",
    "              <div class=\"panel panel-primary\">",
    "                <div class=\"panel-heading\">",
    "                  <h4 class=\"panel-title\">Address</h4>",
    "                </div>",
    "                <div class=\"panel-body\">",
    "                  <div class=\"row\" *ngIf=\"acct.Address1\">",
    "                    <strong>{{acct.Address1}}</strong>",
    "                  </div>",
    "                  <div class=\"row\" *ngIf=\"acct.Address2\">",
    "                    <strong>{{acct.Address2}}</strong>",
    "                  </div>",
    "                  <div class=\"row\" *ngIf=\"acct.Address3\">",
    "                    <strong>{{acct.Address3}}</strong>",
    "                  </div>",
    "                  <div class=\"row\">",
    "                    <strong>{{acct.City}} {{acct.State}} {{acct.ZIP}}</strong>",
    "                  </div>",
    "                  <div class=\"row\">",
    "                    <button (click)=\"bezl.functions['clickAddress'](acct)\" ",
    "                            class=\"btn btn-md btn-default\"",
    "                            style=\"margin-top:10px\">",
    "                      <i class=\"fa fa-map\" aria-hidden=\"true\"></i><span style=\"color:blue\"> Navigate</span>",
    "                    </button>  ",
    "                  </div>",
    "                </div>",
    "              </div>",
    "            </div>",
    "            <!-- END: Address -->",
    "",
    "            <!-- Contacts -->",
    "            <div class=\"col-sm-2\">",
    "              <div class=\"panel panel-primary\">",
    "                <div class=\"panel-heading\">",
    "                  <h4 class=\"panel-title\">Contacts</h4>",
    "                </div>",
    "                <div class=\"panel-body\">",
    "                  <div class=\"row\" style=\"margin-left:10px;\" *ngFor=\"let cont of acct.Contacts\">",
    "                    <div class=\"row\" *ngIf=\"cont.ContactName\">",
    "                      <strong><span style=\"color:blue\">{{cont.ContactName}}</span></strong> <span class=\"badge badge-pill badge-success\" *ngIf=\"cont.primaryContactPurchase\"> <i class=\"fa fa-usd fa-lg fa-inverse\" aria-hidden=\"true\"></i> </span>",
    "                    </div>",
    "                    <div class=\"row\" *ngIf=\"cont.ContactTitle\">",
    "                      {{cont.ContactTitle}} ",
    "                    </div>",
    "                    <div class=\"row\" *ngIf=\"cont.PhoneNum\">",
    "                      <strong>Phone: </strong><a href=\"tel:{{cont.PhoneNum}}\" (click)=\"bezl.functions['clickPhoneNum'](cont)\">{{cont.PhoneNum}}</a>",
    "                    </div>",
    "                    <div class=\"row\" *ngIf=\"cont.EMailAddress\">",
    "                      <strong>E-mail: </strong><a href=\"mailto:{{cont.EMailAddress}}\" (click)=\"bezl.functions['clickEmail'](cont)\">{{cont.EMailAddress}}</a>",
    "                    </div>",
    "                    <div class=\"row\" >",
    "                      <button value=\"{{cont.Twitter}}\" onclick=\"if(this.value.substr(0,4).toLowerCase() == 'http'){window.open(this.value, '_blank');}else{window.open('http://' + this.value, '_blank');}\" *ngIf=\"cont.Twitter\"> ",
    "                        <i class=\"fa fa-twitter\" aria-hidden=\"true\"></i>",
    "                      </button>                ",
    "                      <button value=\"{{cont.FaceBook}}\" onclick=\"if(this.value.substr(0,4).toLowerCase() == 'http'){window.open(this.value, '_blank');}else{window.open('http://' + this.value, '_blank');}\" *ngIf=\"cont.FaceBook\">",
    "                        <i class=\"fa fa-facebook\" aria-hidden=\"true\"></i>",
    "                      </button>                ",
    "                      <button value=\"{{cont.LinkedIn}}\" onclick=\"if(this.value.substr(0,4).toLowerCase() == 'http'){window.open(this.value, '_blank');}else{window.open('http://' + this.value, '_blank');}\"  *ngIf=\"cont.LinkedIn\">",
    "                        <i class=\"fa fa-linkedin\" aria-hidden=\"true\"></i>",
    "                      </button>",
    "                    </div>",
    "                    <br>",
    "                  </div>",
    "                </div>",
    "              </div>",
    "            </div>",
    "            <!-- END: Contacts -->",
    "            ",
    "            <!-- Other Info -->",
    "            <div class=\"col-sm-3\">",
    "              <div class=\"panel panel-primary\">",
    "                <div class=\"panel-heading\">",
    "                  <h4 class=\"panel-title\">Other Info</h4>",
    "                </div>",
    "                <div class=\"panel-body\">",
    "                  <div class=\"row\">",
    "                    <strong>Est. Date: </strong>{{acct.EstDate | date:'shortDate'}}",
    "                  </div>",
    "                  <div class=\"row\">",
    "                    <strong>YTD Sales: </strong>{{acct.YTDSales | currency:'USD':true}}",
    "                  </div>",
    "                  <div class=\"row\">",
    "                    <strong>Last Year Sales: </strong>{{acct.LYTDSales | currency:'USD':true}}",
    "                  </div>",
    "                  <div class=\"row\">",
    "                    <strong>Terms: </strong>{{acct.TermsDescription}}",
    "                  </div>",
    "                  <div class=\"row\">",
    "                    <strong>Ship Via: </strong>{{acct.ShipVia}}",
    "                  </div>",
    "                  <div class=\"row\">",
    "                    <strong>Freight Terms: </strong>{{acct.FreightTerms}}",
    "                  </div>",
    "                  <div class=\"row\" *ngIf=\"acct.HoursOfOperation\">",
    "                    <strong>Hours of Operation: </strong>{{acct.HoursOfOperation}}",
    "                  </div>",
    "                  <div class=\"row\" *ngIf=\"acct.WebSite\">",
    "                    <strong>Website: </strong>",
    "                      <a *ngIf=\"acct.WebSite.startsWith('http')\" href=\"{{acct.WebSite}}\" target=\"_blank\"><span style=\"color:blue\">{{acct.WebSite}}</span></a>",
    "                      <a *ngIf=\"!acct.WebSite.startsWith('http')\" href=\"http://{{acct.WebSite}}\" target=\"_blank\"><span style=\"color:blue\">{{acct.WebSite}}</span></a>",
    "                  </div>",
    "",
    "                </div>",
    "              </div>",
    "            </div>",
    "            <!-- END: Other Info -->",
    "            ",
    "             <!-- AR Aging  -->",
    "            <div class=\"col-sm-3\">",
    "              <div class=\"panel panel-primary\">",
    "                <div class=\"panel-heading\">",
    "                  <h4 class=\"panel-title\">AR Aging</h4>",
    "                </div>",
    "                <div class=\"panel-body\">",
    "                  <div class=\"row\">",
    "                    <div class=\"col-xs-4\"><strong>Current: </strong></div> ",
    "                    <div class=\"col-xs-5\">{{acct.CurrentBalance | currency:'USD':true}} </div>",
    "                  </div>",
    "                  <div class=\"row\">",
    "                    <div class=\"col-xs-4\"><strong>30-60: </strong></div>",
    "                    <div class=\"col-xs-5\">{{acct.ThirtyToSixty | currency:'USD':true}}</div>",
    "                  </div>",
    "                  <div class=\"row\">",
    "                    <div class=\"col-xs-4\"><strong>60-90: </strong></div> ",
    "                    <div class=\"col-xs-5\">{{acct.SixtytoNinety | currency:'USD':true}}</div>",
    "                  </div>",
    "                  <div class=\"row\">",
    "                    <div class=\"col-xs-4\"><strong>90-120: </strong></div>",
    "                    <div class=\"col-xs-5\">{{acct.NinetyToOneHundredTwenty | currency:'USD':true}}</div>",
    "                  </div>",
    "                  <div class=\"row\">",
    "                    <div class=\"col-xs-4\"><strong>120+: </strong></div>",
    "                    <div class=\"col-xs-5\">{{acct.OneHundredTwentyPlus | currency:'USD':true}}</div>",
    "                  </div>",
    "                </div>",
    "              </div>          ",
    "            </div>",
    "            <!-- END: AR Aging -->        ",
    "          </div>",
    "          <!-- END: Drill down row 1 -->",
    "          ",
    "          <!-- Drill down row 2 -->",
    "          <div class=\"row\" *ngIf=\"acct.Selected && acct.show && acct.CustomerNotes\" style=\"margin-left:5px;margin-top:10px\">",
    "            <!-- Customer Notes -->",
    "              <div class=\"col-sm-12\">",
    "                <div class=\"panel panel-primary\">",
    "                  <div class=\"panel-heading\">",
    "                    <h4 class=\"panel-title\">Notes</h4>",
    "                  </div>",
    "                  <div class=\"panel-body\">",
    "                     <div class=\"row\" *ngIf =\"acct.CustomerNotes\">",
    "                      <span>Customer Notes: </span><span [innerHTML]=\"acct.CustomerNotes\"></span>",
    "                    </div>",
    "                  </div>",
    "                </div>",
    "                 <!-- END: Notes -->",
    "              </div>",
    "              <!-- END: Notes Row View -->",
    "          </div>",
    "          <!-- END: Drill down row 2 -->",
    "          ",
    "        </td>",
    "      </tr>",
    "    </template>",
    "  </tbody>",
    "</table>",
    "",
    "",
    "<!-- Call Log Dialog -->",
    "<p-dialog header=\"Call Log\" [(visible)]=\"bezl.vars.showCallLog\" [modal]=\"true\" appendTo=\"body\"  ",
    "          [height]=\"bezl.vars.dialogHeight\" [width]=\"bezl.vars.dialogWidth\">",
    "  ",
    "  <div style=\"overflow: auto; padding-right: 10px\" [ngStyle]=\"{'height.px': bezl.vars.dialogHeight-100, 'width.px': bezl.vars.dialogWidth-25}\">",
    "    ",
    "    <div class=\"row pull-right\" [hidden]=\"!bezl.vars.loadingCallLog\">",
    "      <label [hidden]=\"!bezl.vars.loadingCallLog\">Loading... <i class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i></label>",
    "    </div>",
    "",
    "    <div [hidden]=\"bezl.vars.loadingCallLog\">",
    "      <div class=\"row\">",
    "        <div class=\"col-sm-2\">",
    "          <h5>Short Summary:</h5>",
    "        </div>",
    "        <div class=\"col-sm-10\">",
    "          <input type=\"text\" class=\"form-control\" ",
    "                 placeholder=\"Short Summary...\" ",
    "                 [(ngModel)]=\"bezl.vars.shortSummary\"",
    "                 style=\"width:100%\">",
    "        </div>",
    "      </div>",
    "      <div class=\"row\">",
    "        <div class=\"col-sm-2\">",
    "          <h5>Details</h5>",
    "        </div>",
    "        <div class=\"col-sm-10\" style=\"margin-bottom:4px\">",
    "          <textarea class=\"form-control\" ",
    "                    placeholder=\"Details...\" ",
    "                    [(ngModel)]=\"bezl.vars.details\"></textarea>",
    "        </div>",
    "      </div>",
    "      <div class=\"row\">",
    "        <div class=\"col-sm-2\">",
    "          <h5>Call Type</h5>",
    "        </div>",
    "        <div class=\"col-sm-10\">",
    "          <select class=\"form-control\" ",
    "                  [(ngModel)]=\"bezl.vars.type\">",
    "            <option *ngFor=\"let item of bezl.data.CallTypes\" [value]=\"item.CallType\">{{item.CallTypeDesc}}</option>",
    "          </select>",
    "        </div>",
    "      </div>",
    "      <div class=\"row\">",
    "        <div class=\"col-sm-2\">",
    "        </div>",
    "        <div class=\"col-sm-10\">",
    "          <button type=\"button\" ",
    "                  (click)=\"bezl.functions['addNote']()\" ",
    "                  class=\"btn btn-md btn-primary\" ",
    "                  tabindex=\"-1\"><i class=\"demo-pli-add icon-fw\"></i>Add Entry</button>",
    "        </div>",
    "      </div>",
    "    </div>",
    "",
    "    <div class=\"list-group bord-no\"  [hidden]=\"bezl.vars.loadingCallLog\">",
    "      <template ngFor let-note [ngForOf]=\"bezl.vars.pendingNotes\" let-i=\"index\">",
    "        <div class=\"list-group-item\">",
    "          <div class=\"media-body \">",
    "            <small class=\"text-muted\" *ngIf=\"!note.processed\">Pending</small>",
    "            <small class=\"text-muted\" *ngIf=\"note.processed && !note.success\"><strong>Failed: {{note.result}}</strong></small>",
    "            <small class=\"text-muted\">{{note.shortSummary}}</small>",
    "            <a (click)=\"bezl.functions['deleteFailedNote'](note)\"> Delete</a>",
    "            <a (click)=\"bezl.functions['retryFailedNote'](note)\"> Retry</a>",
    "            <div class=\"well\">",
    "              {{note.details}}",
    "            </div>",
    "          </div>",
    "        </div>",
    "      </template>",
    "    </div>",
    "",
    "    <div class=\"list-group bord-no\"  [hidden]=\"bezl.vars.loadingCallLog\">",
    "      <template ngFor let-note [ngForOf]=\"bezl.data.CRMCalls\" let-i=\"index\">",
    "        <div class=\"list-group-item\">",
    "          <div class=\"media-body \">",
    "            <small class=\"pull-right\" *ngIf=\"!note.ExternalNote\">{{note.CallTypeDesc}}</small>",
    "            <strong>{{note.SalesRepName}}</strong><br>",
    "            <small class=\"text-muted\">{{note.CallDate | date:'shortDate'}} - {{note.ShortSummary}}</small>",
    "            <div class=\"well\">",
    "              {{note.Details}}",
    "            </div>",
    "          </div>",
    "        </div>",
    "      </template>",
    "    </div>",
    "",
    "  </div>",
    "</p-dialog>",
    "<!-- END: Call Log Dialog -->"
  ],
  "functions": [
    {
      "method": "ngOnInit",
      "code": "bezl.vars.dialogHeight = Math.floor(window.innerHeight*0.7);\nbezl.vars.dialogWidth = Math.floor(window.innerWidth*0.7);\n\nbezl.vars.showCallLog = false;\nbezl.vars.newCall = false;\nbezl.functions.setConfig();\n\nrequire([bezl.vars.config.baseJsUrl + 'onStartup.js'], function(functions) {\n\tfunctions.onStartup(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.vars.dialogHeight = Math.floor(window.innerHeight * 0.7);\r\nbezl.vars.dialogWidth = Math.floor(window.innerWidth * 0.7);\r\nbezl.vars.showCallLog = false;\r\nbezl.vars.newCall = false;\r\nbezl.functions.setConfig();\r\nrequire([bezl.vars.config.baseJsUrl + 'onStartup.js'], function (functions) {\r\n    functions.onStartup(bezl);\r\n});\r\n"
    },
    {
      "method": "onDataChange",
      "code": "bezl.data = dataResp;\n\nbezl.functions.setConfig();\nrequire([bezl.vars.config.baseJsUrl + 'onDataChange.js'], function(functions) {\n\tfunctions.onDataChange(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.data = dataResp;\r\nbezl.functions.setConfig();\r\nrequire([bezl.vars.config.baseJsUrl + 'onDataChange.js'], function (functions) {\r\n    functions.onDataChange(bezl);\r\n});\r\n"
    },
    {
      "method": "setConfig",
      "code": "bezl.vars.config = {};\n\nbezl.vars.config.Platform = \"Epicor10\"; // Epicor10, Epicor905\nbezl.vars.config.Connection = \"Epicor 10 AE\";\nbezl.vars.config.Company = \"EPIC06\";\n\nbezl.vars.config.retryInterval = 300; // How many seconds in between failed write of call log to wait\nbezl.vars.config.maxRetryCount = 5; // Maximum number of times to retry before outright failing\n\n// *********************************************************************************\n// Configuration Variables\n// Only edit these if you know what you are doing.\n// version: The version number of this app. Setting this vill use the javascript\n//          include files in the corresponding \"versions\" subfolder. An empty string\n//          will use the \"development\" javascript files in the root directory.\n// libVersion: The version number of the library javascript include files to use.\n// baseUrl: The base URL of the javascript include files. Generally this should be an\n//          empty string and the correct path will be automatically determined.\n//          However, for development you may wish to point this to a RawGit URL of\n//          a specific branch (e.g. https://rawgit.com/bezlio/bezlio-apps/my-branch).\nbezl.vars.config.version = \"1.2\";\nbezl.vars.config.libVersion = \"1.4\";\nbezl.vars.config.baseUrl = \"\";\n// *********************************************************************************\n\n// If the baseURL is not set above then we will determine a sane default based on the URL\nif (bezl.vars.config.baseUrl == \"\") {\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\n        bezl.vars.config.baseUrl = \"https://apps-dev.bezl.io\";\n    } else {\n        bezl.vars.config.baseUrl = \"https://apps.bezl.io\";\n    }\n}\n\n// If version numbers exist above they will also be added to the javascript include URLs\nbezl.vars.config.baseJsUrl = bezl.vars.config.baseUrl\n  \t\t\t\t\t\t\t+ \"/roles/sales-rep/accounts-view/\"\n  \t\t\t\t\t\t\t+ (bezl.vars.config.version ? \"versions/\" + bezl.vars.config.version + \"/\" : \"\")\n  \t\t\t\t\t\t\t+ \"js/\"\nbezl.vars.config.baseLibraryUrl = bezl.vars.config.baseUrl\n  \t\t\t\t\t\t\t+ \"/libraries/\"\n\t\t\t\t\t\t\t+ (bezl.vars.config.libVersion ? \"versions/\" + bezl.vars.config.libVersion + \"/\" : \"\")",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.vars.config = {};\r\nbezl.vars.config.Platform = \"Epicor10\"; // Epicor10, Epicor905\r\nbezl.vars.config.Connection = \"Epicor 10 AE\";\r\nbezl.vars.config.Company = \"EPIC06\";\r\nbezl.vars.config.retryInterval = 300; // How many seconds in between failed write of call log to wait\r\nbezl.vars.config.maxRetryCount = 5; // Maximum number of times to retry before outright failing\r\n// *********************************************************************************\r\n// Configuration Variables\r\n// Only edit these if you know what you are doing.\r\n// version: The version number of this app. Setting this vill use the javascript\r\n//          include files in the corresponding \"versions\" subfolder. An empty string\r\n//          will use the \"development\" javascript files in the root directory.\r\n// libVersion: The version number of the library javascript include files to use.\r\n// baseUrl: The base URL of the javascript include files. Generally this should be an\r\n//          empty string and the correct path will be automatically determined.\r\n//          However, for development you may wish to point this to a RawGit URL of\r\n//          a specific branch (e.g. https://rawgit.com/bezlio/bezlio-apps/my-branch).\r\nbezl.vars.config.version = \"1.2\";\r\nbezl.vars.config.libVersion = \"1.4\";\r\nbezl.vars.config.baseUrl = \"\";\r\n// *********************************************************************************\r\n// If the baseURL is not set above then we will determine a sane default based on the URL\r\nif (bezl.vars.config.baseUrl == \"\") {\r\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\r\n        bezl.vars.config.baseUrl = \"https://apps-dev.bezl.io\";\r\n    }\r\n    else {\r\n        bezl.vars.config.baseUrl = \"https://apps.bezl.io\";\r\n    }\r\n}\r\n// If version numbers exist above they will also be added to the javascript include URLs\r\nbezl.vars.config.baseJsUrl = bezl.vars.config.baseUrl + \"/roles/sales-rep/accounts-view/\" + (bezl.vars.config.version ? \"versions/\" + bezl.vars.config.version + \"/\" : \"\") + \"js/\";\r\nbezl.vars.config.baseLibraryUrl = bezl.vars.config.baseUrl + \"/libraries/\" + (bezl.vars.config.libVersion ? \"versions/\" + bezl.vars.config.libVersion + \"/\" : \"\");\r\n"
    },
    {
      "method": "refresh",
      "code": "bezl.functions.setConfig();\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.runQuery(bezl, 'Accounts');\n});\n\nbezl.vars.filterString = \"\";\n$(bezl.container.nativeElement).find('#filterString')[0].value = \"\"; // Clear out the search filter box",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.functions.setConfig();\r\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.runQuery(bezl, 'Accounts');\r\n});\r\nbezl.vars.filterString = \"\";\r\n$(bezl.container.nativeElement).find('#filterString')[0].value = \"\"; // Clear out the search filter box\r\n"
    },
    {
      "method": "onFilterChange",
      "code": "bezl.functions.setConfig();\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.applyFilter(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.functions.setConfig();\r\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.applyFilter(bezl);\r\n});\r\n"
    },
    {
      "method": "sort",
      "code": "bezl.functions.setConfig();\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.sort(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.functions.setConfig();\r\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.sort(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "selectRow",
      "code": "bezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.select(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.select(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "clickAddress",
      "code": "bezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.clickAddress(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.clickAddress(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "clickCallLog",
      "code": "bezl.functions['setConfig']();\nbezl.vars.showCallLog = true;\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.clickCallLog(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.functions['setConfig']();\r\nbezl.vars.showCallLog = true;\r\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.clickCallLog(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "addNote",
      "code": "bezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.addNote(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.addNote(bezl);\r\n});\r\n"
    },
    {
      "method": "deleteFailedNote",
      "code": "bezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.deleteFailedNote(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.deleteFailedNote(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "retryFailedNote",
      "code": "bezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.retryFailedNote(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.retryFailedNote(bezl, parm);\r\n});\r\n"
    }
  ],
  "data": ""
}
