{
  "id": "e80ddfa9-1fe7-4bae-b661-b1a9792349c6",
  "name": "Accounts View",
  "template": "custom",
  "owner": "sremington@saberlogic.com",
  "shares": [],
  "vars": [],
  "dataSubscriptions": [],
  "markup": [
    "<style>",
    "  .btn.btn-mobile {",
    "  \tpadding-left: 6px;",
    "    padding-right: 6px;",
    "    width: 90px;",
    "  }",
    "  .no-gutters {",
    "   padding-left: 0px;",
    "   padding-right: 0px;",
    "  }",
    "  input[type=search]::-webkit-search-cancel-button {",
    "    -webkit-appearance: searchfield-cancel-button;",
    "  }",
    "</style>",
    "",
    "",
    "<div class=\"row\">",
    "  <div class=\"col-sm-4\">",
    "   \t<select class=\"form-control\" [ngModel]=\"bezl.vars.custCategory\" (ngModelChange)=\"bezl.functions.onCategoryChange($event)\">",
    "      <option *ngFor=\"let cat of bezl.data.Categories\" [ngValue]=cat.Type>{{cat.Type}}</option>",
    "    </select>",
    "  </div>",
    "  <div class=\"col-sm-6\">",
    "    <!-- Filter input box -->",
    "    <input class=\"form-control\" id=\"filterString\" type=\"search\" incremental=\"true\" placeholder=\"Filter...\" [(ngModel)]=\"bezl.vars.filterString\" (search)=\"bezl.functions['onFilterChange']()\">",
    "  </div>",
    "  <div class=\"col-sm-2\">",
    "    <!-- Loading / Refresh -->",
    "    <label class=\"pull-right\" [hidden]=\"!bezl.vars.loading\">Loading... <i class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i></label>",
    "    <button (click)=\"bezl.functions['refresh']()\" *ngIf=\"!bezl.vars.loading\" class=\"btn btn-md btn-default pull-right\">Refresh</button>",
    "  </div>",
    "</div>",
    "",
    "        ",
    "",
    "<table class=\"table table-hover table-striped\">",
    "   <thead>",
    "    <tr>",
    "     <th>",
    "       ",
    "       <div class=\"hidden-xs\">",
    "       <div class=\"row\">",
    "       <div class=\"col-sm-2 no-gutters\">",
    "         <button type=\"button\"",
    "                 (click)=\"bezl.functions['sort']('ID')\"",
    "                 class=\"btn btn-default btn-block\">",
    "           <span class=\"pull-left\">ID</span>",
    "           <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "              *ngIf=\"bezl.vars.sortCol == 'ID' && bezl.vars.sort == 'asc'\"></i>",
    "           <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "              *ngIf=\"bezl.vars.sortCol == 'ID' && bezl.vars.sort == 'desc'\"></i>",
    "         </button>",
    "       </div>",
    "       <div class=\"col-sm-3 no-gutters\">",
    "         <button type=\"button\" ",
    "                 (click)=\"bezl.functions['sort']('Name')\"",
    "                 class=\"btn btn-default btn-block\">",
    "           <span class=\"pull-left\">Name</span>",
    "           <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "              *ngIf=\"bezl.vars.sortCol == 'Name' && bezl.vars.sort == 'asc'\"></i>",
    "           <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "              *ngIf=\"bezl.vars.sortCol == 'Name' && bezl.vars.sort == 'desc'\"></i>",
    "         </button>",
    "       </div>",
    "       <div class=\"col-sm-2 no-gutters\">",
    "         <button type=\"button\" ",
    "                 (click)=\"bezl.functions['sort']('Territory')\"",
    "                 class=\"btn btn-default btn-block\">",
    "           <span class=\"pull-left\">Territory</span>",
    "           <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "              *ngIf=\"bezl.vars.sortCol == 'Territory' && bezl.vars.sort == 'asc'\"></i>",
    "           <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "              *ngIf=\"bezl.vars.sortCol == 'Territory' && bezl.vars.sort == 'desc'\"></i>",
    "         </button>",
    "       </div>",
    "       <div class=\"col-sm-2 no-gutters\">",
    "         <button type=\"button\" ",
    "                 (click)=\"bezl.functions['sort']('LastContact')\"",
    "                 class=\"btn btn-default btn-block\">",
    "           <span class=\"pull-left\">Last Contact</span>",
    "           <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "              *ngIf=\"bezl.vars.sortCol == 'LastContact' && bezl.vars.sort == 'asc'\"></i>",
    "           <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "              *ngIf=\"bezl.vars.sortCol == 'LastContact' && bezl.vars.sort == 'desc'\"></i>",
    "         </button>",
    "       </div>",
    "       <div class=\"col-sm-2 no-gutters\">",
    "         <button type=\"button\" ",
    "                 (click)=\"bezl.functions['sort']('NextTaskDue')\"",
    "                 class=\"btn btn-default btn-block\">",
    "           <span class=\"pull-left\">Task Due</span>",
    "           <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "              *ngIf=\"bezl.vars.sortCol == 'NextTaskDue' && bezl.vars.sort == 'asc'\"></i>",
    "           <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "              *ngIf=\"bezl.vars.sortCol == 'NextTaskDue' && bezl.vars.sort == 'desc'\"></i>",
    "         </button>",
    "       </div>",
    "       <div class=\"col-sm-1 no-gutters\">",
    "         <button type=\"button\" ",
    "                 (click)=\"bezl.functions['sort']('Distance')\"",
    "                 class=\"btn btn-default btn-block\">",
    "           <span class=\"pull-left\">Distance</span>",
    "           <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "              *ngIf=\"bezl.vars.sortCol == 'Distance' && bezl.vars.sort == 'asc'\"></i>",
    "           <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "              *ngIf=\"bezl.vars.sortCol == 'Distance' && bezl.vars.sort == 'desc'\"></i>",
    "         </button>",
    "       </div>",
    "       </div>",
    "       </div>",
    "      <!--/th>",
    "      </tr>",
    "      <tr>",
    "      <th-->",
    "       ",
    "       <!-- This is the normal button layout for a big screen.  The small layout will follow -->",
    "       <!--div class=\"btn-group btn-group-justified hidden-xs\" role=\"group\" aria-label=\"Justified button group\">",
    "         <div class=\"btn-group\" role=\"group\">",
    "           <button type=\"button\"",
    "                   (click)=\"bezl.functions['sort']('ID')\"",
    "                   class=\"btn btn-default\">",
    "             <span class=\"pull-left\">ID</span>",
    "             <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'ID' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'ID' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "         <div class=\"btn-group\" role=\"group\">",
    "           <button type=\"button\" ",
    "                   (click)=\"bezl.functions['sort']('Name')\"",
    "                   class=\"btn btn-default\">",
    "             <span class=\"pull-left\">Name</span>",
    "             <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'Name' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'Name' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "         <div class=\"btn-group\" role=\"group\">",
    "           <button type=\"button\" ",
    "                   (click)=\"bezl.functions['sort']('Territory')\"",
    "                   class=\"btn btn-default\">",
    "             <span class=\"pull-left\">Territory</span>",
    "             <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'Territory' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'Territory' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "         <div class=\"btn-group\" role=\"group\">",
    "           <button type=\"button\" ",
    "                   (click)=\"bezl.functions['sort']('LastContact')\"",
    "                   class=\"btn btn-default\">",
    "             <span class=\"pull-left\">Last Contact</span>",
    "             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'LastContact' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'LastContact' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "         <div class=\"btn-group\" role=\"group\">",
    "           <button type=\"button\" ",
    "                   (click)=\"bezl.functions['sort']('NextTaskDue')\"",
    "                   class=\"btn btn-default\">",
    "             <span class=\"pull-left\">Task Due</span>",
    "             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'NextTaskDue' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'NextTaskDue' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "         <div class=\"btn-group\" role=\"group\">",
    "           <button type=\"button\" ",
    "                   (click)=\"bezl.functions['sort']('Distance')\"",
    "                   class=\"btn btn-default\">",
    "             <span class=\"pull-left\">Distance</span>",
    "             <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'Distance' && bezl.vars.sort == 'asc'\"></i>",
    "             <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                *ngIf=\"bezl.vars.sortCol == 'Distance' && bezl.vars.sort == 'desc'\"></i>",
    "           </button>",
    "         </div>",
    "       </div-->",
    "       ",
    "       <!-- This is the normal button layout for small screens -->",
    "       <div class=\"visible-xs\">",
    "          <div class=\"col-sm-12\">",
    "         Sort By: <br />",
    "            <div class=\"btn-group btn-group-justified\">",
    "         \t<div class=\"btn-group\">",
    "             <button type=\"button\" (click)=\"bezl.functions['sort']('ID')\"class=\"btn btn-default btn-mobile\" >",
    "               <span class=\"pull-left\">ID</span>",
    "               <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'ID' && bezl.vars.sort == 'asc'\"></i>",
    "               <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'ID' && bezl.vars.sort == 'desc'\"></i>",
    "             </button>",
    "",
    "             <button type=\"button\" (click)=\"bezl.functions['sort']('Name')\"class=\"btn btn-default btn-mobile\">",
    "               <span class=\"pull-left\">Name</span>",
    "               <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'Name' && bezl.vars.sort == 'asc'\"></i>",
    "               <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'Name' && bezl.vars.sort == 'desc'\"></i>",
    "             </button>",
    "              </div>",
    "            </div>",
    "",
    "            <div class=\"btn-group btn-group-justified\">",
    "         \t<div class=\"btn-group\">",
    "             <button type=\"button\" (click)=\"bezl.functions['sort']('Territory')\"class=\"btn btn-default btn-mobile\">",
    "               <span class=\"pull-left\">Territory</span>",
    "               <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'Territory' && bezl.vars.sort == 'asc'\"></i>",
    "               <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'Territory' && bezl.vars.sort == 'desc'\"></i>",
    "             </button>",
    "            ",
    "             <button type=\"button\" (click)=\"bezl.functions['sort']('LastContact')\" class=\"btn btn-default btn-mobile\" >",
    "               <span class=\"pull-left\">Last Cont</span>",
    "               <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'LastContact' && bezl.vars.sort == 'asc'\"></i>",
    "               <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'LastContact' && bezl.vars.sort == 'desc'\"></i>",
    "             </button>",
    "              </div>",
    "              </div>",
    "              ",
    "\t\t\t<div class=\"btn-group btn-group-justified\">",
    "         \t<div class=\"btn-group\">",
    "             <button type=\"button\" (click)=\"bezl.functions['sort']('NextTaskDue')\"class=\"btn btn-default btn-mobile\" >",
    "               <span class=\"pull-left\">Task Due</span>",
    "               <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'NextTaskDue' && bezl.vars.sort == 'asc'\"></i>",
    "               <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'NextTaskDue' && bezl.vars.sort == 'desc'\"></i>",
    "             </button>",
    "",
    "             <button type=\"button\" (click)=\"bezl.functions['sort']('Distance')\"class=\"btn btn-default btn-mobile\" >",
    "               <span class=\"pull-left\">Distance</span>",
    "               <i class=\"fa fa-sort-numeric-asc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'Distance' && bezl.vars.sort == 'asc'\"></i>",
    "               <i class=\"fa fa-sort-numeric-desc pull-right\" aria-hidden=\"true\" ",
    "                  *ngIf=\"bezl.vars.sortCol == 'Distance' && bezl.vars.sort == 'desc'\"></i>",
    "             </button>",
    "            </div>",
    "          </div>",
    "            </div>",
    "         </div>",
    "       ",
    "     </th>",
    "    </tr>",
    "   </thead>",
    "  <tbody>",
    "<template ngFor let-acct [ngForOf]=\"bezl.data.Accounts\" let-i=\"index\">",
    "    <tr class=\"read\"",
    "       [ngClass]=\"{'default': acct.AccountType=='Customer', 'success':acct.AccountType!='Customer'}\"",
    "       *ngIf=\"acct.show\">",
    "    <td>",
    "      <!-- Main row per account -->",
    "      <div class=\"row\"",
    "       (click)=\"bezl.functions['selectRow'](acct)\"",
    "       *ngIf=\"acct.show\">",
    "        <!-- Normal View -->",
    "        <div class=\"col-sm-2 hidden-xs\">",
    "          <i class=\"fa fa-chevron-right\" aria-hidden=\"true\" *ngIf=\"!acct.Selected\"></i>",
    "          <i class=\"fa fa-chevron-down\" aria-hidden=\"true\" *ngIf=\"acct.Selected\"></i>",
    "          {{acct.ID}}",
    "        </div>",
    "        ",
    "        <div class=\"col-sm-3 hidden-xs\">{{acct.Name}}</div>",
    "\t\t<div class=\"col-sm-2 hidden-xs\">{{acct.Territory}}</div>",
    "        <div class=\"col-sm-2 hidden-xs\">{{acct.LastContact | date }}</div>",
    "        <div class=\"col-sm-2 hidden-xs\">{{acct.NextTaskDue | date }}</div>",
    "        <div class=\"col-sm-1 hidden-xs\">{{acct.Distance}} mi.</div>",
    "        <!-- Mobile View -->",
    "         <div class=\"col-sm-2 visible-xs\">",
    "          <i class=\"fa fa-chevron-right\" aria-hidden=\"true\" *ngIf=\"!acct.Selected\"></i>",
    "          <i class=\"fa fa-chevron-down\" aria-hidden=\"true\" *ngIf=\"acct.Selected\"></i>",
    "          <strong>ID: </strong>{{acct.ID}}",
    "        </div>",
    "        ",
    "        <div class=\"col-sm-3 visible-xs\"><strong>Name: </strong><span style=\"color:blue\">{{acct.Name}}</span></div>",
    "\t\t<div class=\"col-sm-2 visible-xs\"><strong>Territory: </strong>{{acct.Territory}}</div>",
    "        <div class=\"col-sm-2 visible-xs\"><strong>Last Contact: </strong>{{acct.LastContact | date }}</div>",
    "        <div class=\"col-sm-2 visible-xs\"><strong>Next Task Due: </strong>{{acct.NextTaskDue | date }}</div>",
    "        <div class=\"col-sm-1 visible-xs\"><strong>Distance: </strong>{{acct.Distance}} mi.</div>",
    "        ",
    "      </div>",
    "      <!-- END: Main row per account -->",
    "      ",
    "      <!-- Drill-down view -->",
    "      <div class=\"row\" *ngIf=\"acct.Selected && acct.show\" style=\"margin-left:5px;margin-top:10px\">",
    "        ",
    "        <!-- Address -->      ",
    "        <div class=\"col-sm-3\">",
    "          <div class=\"panel panel-primary\">",
    "            <div class=\"panel-heading\">",
    "              <h4 class=\"panel-title\">Address</h4>",
    "            </div>",
    "            <div class=\"panel-body\">",
    "              <div class=\"row\" *ngIf=\"acct.Address1\">",
    "                <strong>{{acct.Address1}}</strong>",
    "              </div>",
    "              <div class=\"row\" *ngIf=\"acct.Address2\">",
    "                <strong>{{acct.Address2}}</strong>",
    "              </div>",
    "              <div class=\"row\" *ngIf=\"acct.Address3\">",
    "                <strong>{{acct.Address3}}</strong>",
    "              </div>",
    "              <div class=\"row\">",
    "                <strong>{{acct.City}} {{acct.State}} {{acct.ZIP}}</strong>",
    "              </div>",
    "              <div class=\"row\">",
    "                <button (click)=\"bezl.functions['clickAddress'](acct)\" ",
    "                        class=\"btn btn-md btn-default\"",
    "                        style=\"margin-top:10px\">",
    "                  <i class=\"fa fa-map\" aria-hidden=\"true\"></i><span style=\"color:blue\"> Navigate</span>",
    "                </button>  ",
    "              </div>",
    "            </div>",
    "          </div>",
    "        </div>",
    "        <!-- END: Address -->",
    "        ",
    "        <!-- Contacts -->",
    "        <div class=\"col-sm-3\">",
    "          <div class=\"panel panel-primary\">",
    "            <div class=\"panel-heading\">",
    "              <h4 class=\"panel-title\">Contacts</h4>",
    "            </div>",
    "            <div class=\"panel-body\">",
    "              <div class=\"row\" style=\"margin-left:10px;\" *ngFor=\"let cont of acct.Contacts\">",
    "                <div class=\"row\" *ngIf=\"cont.ContactName\">",
    "                  <strong><span style=\"color:blue\">{{cont.ContactName}}</span></strong> <span class=\"badge badge-pill badge-success\" *ngIf=\"cont.primaryContactPurchase\"> <i class=\"fa fa-usd fa-lg fa-inverse\" aria-hidden=\"true\"></i> </span>",
    "                </div>",
    "                <div class=\"row\" *ngIf=\"cont.ContactTitle\">",
    "                  {{cont.ContactTitle}} ",
    "                </div>",
    "                <div class=\"row\" *ngIf=\"cont.PhoneNum\">",
    "                  <strong>Phone: </strong><a href=\"tel:{{cont.PhoneNum}}\" (click)=\"bezl.functions['clickPhoneNum'](cont)\">{{cont.PhoneNum}}</a>",
    "                </div>",
    "                <div class=\"row\" *ngIf=\"cont.EMailAddress\">",
    "                  <strong>E-mail: </strong><a href=\"mailto:{{cont.EMailAddress}}\" (click)=\"bezl.functions['clickEmail'](cont)\">{{cont.EMailAddress}}</a>",
    "                </div>",
    "                <div class=\"row\" >",
    "                  <button value=\"{{cont.Twitter}}\" onclick=\"if(this.value.substr(0,4).toLowerCase() == 'http'){window.open(this.value, '_blank');}else{window.open('http://' + this.value, '_blank');}\" *ngIf=\"cont.Twitter\"> ",
    "                  \t<i class=\"fa fa-twitter\" aria-hidden=\"true\"></i>",
    "                  </button>                ",
    "                  <button value=\"{{cont.FaceBook}}\" onclick=\"if(this.value.substr(0,4).toLowerCase() == 'http'){window.open(this.value, '_blank');}else{window.open('http://' + this.value, '_blank');}\" *ngIf=\"cont.FaceBook\">",
    "                  \t<i class=\"fa fa-facebook\" aria-hidden=\"true\"></i>",
    "                  </button>                ",
    "                  <button value=\"{{cont.LinkedIn}}\" onclick=\"if(this.value.substr(0,4).toLowerCase() == 'http'){window.open(this.value, '_blank');}else{window.open('http://' + this.value, '_blank');}\"  *ngIf=\"cont.LinkedIn\">",
    "                  \t<i class=\"fa fa-linkedin\" aria-hidden=\"true\"></i>",
    "                  </button>",
    "                </div>",
    "                <br>",
    "              </div>",
    "            </div>",
    "          </div>",
    "        </div>",
    "        <!-- END: Contacts -->",
    "        ",
    "        <!-- Other Info -->",
    "        <div class=\"col-sm-3\">",
    "          <div class=\"panel panel-primary\">",
    "            <div class=\"panel-heading\">",
    "              <h4 class=\"panel-title\">Other Info</h4>",
    "            </div>",
    "            <div class=\"panel-body\">",
    "              <div class=\"row\">",
    "                <strong>Est. Date: </strong>{{acct.EstDate | date:'shortDate'}}",
    "              </div>",
    "              <div class=\"row\">",
    "                <strong>YTD Sales: </strong>{{acct.YTDSales | currency:'USD':true}}",
    "              </div>",
    "              <div class=\"row\">",
    "                <strong>Last Year Sales: </strong>{{acct.LYTDSales | currency:'USD':true}}",
    "              </div>",
    "              <div class=\"row\">",
    "                <strong>Terms: </strong>{{acct.TermsDescription}}",
    "              </div>",
    "              <div class=\"row\">",
    "                <strong>Ship Via: </strong>{{acct.ShipVia}}",
    "              </div>",
    "              <div class=\"row\">",
    "                <strong>Freight Terms: </strong>{{acct.FreightTerms}}",
    "              </div>",
    "              <div class=\"row\" *ngIf=\"acct.HoursOfOperation\">",
    "                <strong>Hours of Operation: </strong>{{acct.HoursOfOperation}}",
    "              </div>",
    "              <div class=\"row\" *ngIf=\"acct.WebSite\">",
    "                <strong>Website: </strong>",
    "                  <a *ngIf=\"acct.WebSite.startsWith('http')\" href=\"{{acct.WebSite}}\" target=\"_blank\"><span style=\"color:blue\">{{acct.WebSite}}</span></a>",
    "                  <a *ngIf=\"!acct.WebSite.startsWith('http')\" href=\"http://{{acct.WebSite}}\" target=\"_blank\"><span style=\"color:blue\">{{acct.WebSite}}</span></a>",
    "              </div>",
    "",
    "            </div>",
    "          </div>",
    "        </div>",
    "        <!-- END: Other Info -->",
    "        ",
    "         <!-- AR Aging  -->",
    "        <div class=\"col-sm-3\">",
    "          <div class=\"panel panel-primary\">",
    "            <div class=\"panel-heading\">",
    "              <h4 class=\"panel-title\">AR Aging</h4>",
    "            </div>",
    "            <!-- Normal View -->",
    "            <div class=\"panel-body hidden-xs\">",
    "              <div class=\"row\">",
    "                <div class=\"col-sm-5\"><strong>Current: </strong></div> ",
    "                <div class=\"col-sm-7\">{{acct.CurrentBalance | currency:'USD':true}} </div>",
    "              </div>",
    "              <div class=\"row\">",
    "                <div class=\"col-sm-5\"><strong>30-60: </strong></div>",
    "                <div class=\"col-sm-7\">{{acct.ThirtyToSixty | currency:'USD':true}}</div>",
    "              </div>",
    "              <div class=\"row\">",
    "                <div class=\"col-sm-5\"><strong>60-90: </strong></div> ",
    "                <div class=\"col-sm-7\">{{acct.SixtytoNinety | currency:'USD':true}}</div>",
    "              </div>",
    "              <div class=\"row\">",
    "                <div class=\"col-sm-5\"><strong>90-120: </strong></div>",
    "                <div class=\"col-sm-7\">{{acct.NinetyToOneHundredTwenty | currency:'USD':true}}</div>",
    "              </div>",
    "              <div class=\"row\">",
    "                <div class=\"col-sm-5\"><strong>120+: </strong></div>",
    "                <div class=\"col-sm-7\">{{acct.OneHundredTwentyPlus | currency:'USD':true}}</div>",
    "              </div>",
    "            </div>",
    "            <!-- Mobile View -->",
    "            <div class=\"panel-body visible-xs\">",
    "              <div class=\"row\">",
    "                <div><strong>Current: </strong>{{acct.CurrentBalance | currency:'USD':true}} </div>",
    "              </div>",
    "              <div class=\"row\">",
    "                <div><strong>30-60: </strong>{{acct.ThirtyToSixty | currency:'USD':true}}</div>",
    "              </div>",
    "              <div class=\"row\">",
    "                <div><strong>60-90: </strong>{{acct.SixtytoNinety | currency:'USD':true}}</div>",
    "              </div>",
    "              <div class=\"row\">",
    "                <div><strong>90-120: </strong>{{acct.NinetyToOneHundredTwenty | currency:'USD':true}}</div>",
    "              </div>",
    "              <div class=\"row\">",
    "                <div><strong>120+: </strong>{{acct.OneHundredTwentyPlus | currency:'USD':true}}</div>",
    "              </div>",
    "            </div>",
    "          </div>          ",
    "        </div>",
    "        <!-- END: AR Aging -->",
    "        ",
    "      </div>",
    "      <!-- END: first row -->",
    "      ",
    "      <!-- Notes Row view -->",
    "      <div class=\"row\" *ngIf=\"acct.Selected && acct.show && acct.CustomerNotes\" style=\"margin-left:5px;margin-top:10px\">",
    "        ",
    "      <!-- Customer Notes -->",
    "        <div class=\"col-sm-12\">",
    "          <div class=\"panel panel-primary\">",
    "            <div class=\"panel-heading\">",
    "              <h4 class=\"panel-title\">Notes</h4>",
    "            </div>",
    "            <div class=\"panel-body\">",
    "               <div class=\"row\" *ngIf =\"acct.CustomerNotes\">",
    "                <span>Customer Notes: </span><span [innerHTML]=\"acct.CustomerNotes\"></span>",
    "              </div>",
    "            </div>",
    "          </div>",
    "           <!-- END: Notes -->",
    "        </div>",
    "        <!-- END: Notes Row View -->",
    "        ",
    "      </div>",
    "      <!-- END: Drill-down view --> ",
    "",
    "      ",
    "     </td>",
    "   </tr>",
    "</template>",
    "  </tbody>",
    "</table>",
    ""
  ],
  "functions": [
    {
      "method": "ngOnInit",
      "code": "bezl.vars.loading = true;\nbezl.vars.custCategory = 'All';\nbezl.vars.Column = 'CustomerType';\nbezl.functions.setConfig();\n\nrequire([bezl.vars.config.baseJsUrl + 'onStartup.js'], function(functions) {\n\tfunctions.onStartup(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.vars.loading = true;\r\nbezl.vars.custCategory = 'All';\r\nbezl.vars.Column = 'CustomerType';\r\nbezl.functions.setConfig();\r\nrequire([bezl.vars.config.baseJsUrl + 'onStartup.js'], function (functions) {\r\n    functions.onStartup(bezl);\r\n});\r\n"
    },
    {
      "method": "onDataChange",
      "code": "bezl.data = dataResp;\n\nbezl.functions.setConfig();\nrequire([bezl.vars.config.baseJsUrl + 'onDataChange.js'], function(functions) {\n\tfunctions.onDataChange(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "bezl.data = dataResp;\r\nbezl.functions.setConfig();\r\nrequire([bezl.vars.config.baseJsUrl + 'onDataChange.js'], function (functions) {\r\n    functions.onDataChange(bezl);\r\n});\r\n"
    },
    {
      "method": "clickAddress",
      "code": "require([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.clickAddress(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.clickAddress(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "refresh",
      "code": "require([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.runQuery(bezl, 'Accounts');\n    functions.runQuery(bezl, 'AccountContacts');\n    functions.runQuery(bezl, 'Tasks');\n    functions.runQuery(bezl, 'Attachments');\n});\n\nbezl.vars.filterString = \"\";\n$(bezl.container.nativeElement).find('#filterString')[0].value = \"\"; // Clear out the search filter box",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.runQuery(bezl, 'Accounts');\r\n    functions.runQuery(bezl, 'AccountContacts');\r\n    functions.runQuery(bezl, 'Tasks');\r\n    functions.runQuery(bezl, 'Attachments');\r\n});\r\nbezl.vars.filterString = \"\";\r\n$(bezl.container.nativeElement).find('#filterString')[0].value = \"\"; // Clear out the search filter box\r\n"
    },
    {
      "method": "selectRow",
      "code": "require([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.select(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.select(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "sort",
      "code": "require([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.sort(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.sort(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "onFilterChange",
      "code": "require([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.applyFilter(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.applyFilter(bezl);\r\n});\r\n"
    },
    {
      "method": "clickEmail",
      "code": "require([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.clickEmail(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.clickEmail(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "clickPhoneNum",
      "code": "require([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.clickPhoneNum(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.clickPhoneNum(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "setConfig",
      "code": "bezl.vars.config = {};\n\n// *********************************************************************************\n// Configuration Variables\n// Only edit these if you know what you are doing.\n// version: The version number of this app. Setting this vill use the javascript\n//          include files in the corresponding \"versions\" subfolder. An empty string\n//          will use the \"development\" javascript files in the root directory.\n// libVersion: The version number of the library javascript include files to use.\n// baseUrl: The base URL of the javascript include files. Generally this should be an\n//          empty string and the correct path will be automatically determined.\n//          However, for development you may wish to point this to a RawGit URL of\n//          a specific branch (e.g. https://rawgit.com/bezlio/bezlio-apps/my-branch).\nbezl.vars.config.version = \"1.1\";\nbezl.vars.config.libVersion = \"1.0\";\nbezl.vars.config.baseUrl = \"\";\n// *********************************************************************************\n\n// If the baseURL is not set above then we will determine a sane default based on the URL\nif (bezl.vars.config.baseUrl == \"\") {\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\n        bezl.vars.config.baseUrl = \"https://apps-dev.bezl.io\";\n    } else {\n        bezl.vars.config.baseUrl = \"https://apps.bezl.io\";\n    }\n}\n\n// If version numbers exist above they will also be added to the javascript include URLs\nbezl.vars.config.baseJsUrl = bezl.vars.config.baseUrl\n  \t\t\t\t\t\t\t+ \"/roles/sales-rep/accounts-view/\"\n  \t\t\t\t\t\t\t+ (bezl.vars.config.version ? \"versions/\" + bezl.vars.config.version + \"/\" : \"\")\n  \t\t\t\t\t\t\t+ \"js/\"\nbezl.vars.config.baseLibraryUrl = bezl.vars.config.baseUrl\n  \t\t\t\t\t\t\t+ \"/libraries/\"\n\t\t\t\t\t\t\t+ (bezl.vars.config.libVersion ? \"versions/\" + bezl.vars.config.libVersion + \"/\" : \"\")",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.vars.config = {};\r\n// *********************************************************************************\r\n// Configuration Variables\r\n// Only edit these if you know what you are doing.\r\n// version: The version number of this app. Setting this vill use the javascript\r\n//          include files in the corresponding \"versions\" subfolder. An empty string\r\n//          will use the \"development\" javascript files in the root directory.\r\n// libVersion: The version number of the library javascript include files to use.\r\n// baseUrl: The base URL of the javascript include files. Generally this should be an\r\n//          empty string and the correct path will be automatically determined.\r\n//          However, for development you may wish to point this to a RawGit URL of\r\n//          a specific branch (e.g. https://rawgit.com/bezlio/bezlio-apps/my-branch).\r\nbezl.vars.config.version = \"1.1\";\r\nbezl.vars.config.libVersion = \"1.0\";\r\nbezl.vars.config.baseUrl = \"\";\r\n// *********************************************************************************\r\n// If the baseURL is not set above then we will determine a sane default based on the URL\r\nif (bezl.vars.config.baseUrl == \"\") {\r\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\r\n        bezl.vars.config.baseUrl = \"https://apps-dev.bezl.io\";\r\n    }\r\n    else {\r\n        bezl.vars.config.baseUrl = \"https://apps.bezl.io\";\r\n    }\r\n}\r\n// If version numbers exist above they will also be added to the javascript include URLs\r\nbezl.vars.config.baseJsUrl = bezl.vars.config.baseUrl + \"/roles/sales-rep/accounts-view/\" + (bezl.vars.config.version ? \"versions/\" + bezl.vars.config.version + \"/\" : \"\") + \"js/\";\r\nbezl.vars.config.baseLibraryUrl = bezl.vars.config.baseUrl + \"/libraries/\" + (bezl.vars.config.libVersion ? \"versions/\" + bezl.vars.config.libVersion + \"/\" : \"\");\r\n"
    },
    {
      "method": "onCategoryChange",
      "code": "require([bezl.vars.config.baseJsUrl + 'account.js'], function(functions) {\n\tfunctions.applyCategory(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'account.js'], function (functions) {\r\n    functions.applyCategory(bezl, parm);\r\n});\r\n"
    }
  ],
  "data": ""
}