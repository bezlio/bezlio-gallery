{
  "id": "82623859-9cd6-4ceb-9e80-3c8ea7cca50b",
  "name": "Crystal Reports Viewer",
  "template": "custom",
  "owner": "sremington@saberlogic.com",
  "shares": [],
  "vars": [],
  "dataSubscriptions": [
    {
      "name": "ReportListing",
      "connectionId": "11eab4b4-999d-467a-86cb-b48dd077f20c",
      "dataSource": "brdb",
      "plugin": "CrystalReports",
      "method": "GetReportList",
      "args": {
        "FolderName": "Default"
      },
      "data": null,
      "refreshInverval": 0,
      "lastRefresh": null
    }
  ],
  "markup": [
    "<div class=\"row\">",
    "  ",
    "  <!-- Report Selection Sidebar -->",
    "  <div [ngClass]=\"{'col-sm-3': !bezl.vars.reportSelected}\" [hidden]=\"bezl.vars.reportSelected\">",
    "    <table class=\"table table-hover\">",
    "      <thead>",
    "        <tr>",
    "          <th style=\"padding: 0 !important; margin: 0 !important;\">",
    "            <!-- This is the normal button layout for a big screen.  The small layout will follow -->",
    "            <div class=\"btn-group btn-group-justified hidden-xs\" role=\"group\" aria-label=\"Justified button group\">",
    "              <div class=\"btn-group\" role=\"group\">",
    "                <button type=\"button\"",
    "                        (click)=\"bezl.functions['sort']('BaseName')\"",
    "                        class=\"btn btn-default\">",
    "                  <span class=\"pull-left\">Report Name</span>",
    "                  <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                     *ngIf=\"bezl.vars.sortCol == 'BaseName' && bezl.vars.sort == 'asc'\"></i>",
    "                  <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                     *ngIf=\"bezl.vars.sortCol == 'BaseName' && bezl.vars.sort == 'desc'\"></i>",
    "                </button>",
    "                </div>",
    "                    <div class=\"btn-group\">",
    "                    <button class=\"btn btn-default\" ",
    "                        *ngIf=\"!bezl.vars.reportListingLoading\"",
    "                        (click)=\"bezl.functions['refresh']()\">",
    "             \t\t\t <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i> Refresh",
    "                    </button>",
    "              </div>",
    "            </div>",
    "",
    "            <!-- This is the normal button layout for small screens -->",
    "            <div class=\"visible-xs\">",
    "              <div class=\"row\">",
    "                <div class=\"col-sm-12\">",
    "                  Sort By: <br />",
    "                  <div class=\"btn-group\">",
    "                    <button type=\"button\"",
    "                            (click)=\"bezl.functions['sort']('BaseName')\"",
    "                            class=\"btn btn-default btn-mobile\"",
    "                            >",
    "                      <span class=\"pull-left\">Report Name</span>",
    "                      <i class=\"fa fa-sort-alpha-asc pull-right\" aria-hidden=\"true\" ",
    "                         *ngIf=\"bezl.vars.sortCol == 'ID' && bezl.vars.sort == 'asc'\"></i>",
    "                      <i class=\"fa fa-sort-alpha-desc pull-right\" aria-hidden=\"true\" ",
    "                         *ngIf=\"bezl.vars.sortCol == 'ID' && bezl.vars.sort == 'desc'\"></i>",
    "                    </button>",
    "                  </div>",
    "                </div>",
    "              </div>",
    "            </div>",
    "",
    "            <label style=\"margin-top:8px;margin-left:10px\" [hidden]=\"!bezl.vars.reportListingLoading\">Loading... ",
    "                <i class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i>",
    "            </label>            ",
    "            ",
    "          </th>",
    "        </tr>",
    "      </thead>",
    "      ",
    "      <tbody>",
    "       <tr class=\"read\" ",
    "           *ngFor=\"let item of bezl.data.ReportListing\" ",
    "           (click)=\"bezl.functions['runReport'](item)\"",
    "           [ngClass]=\"{'default': !item.Selected, 'success': item.Selected}\">",
    "         <td>{{item.BaseName}}</td>",
    "       </tr>",
    "      </tbody>",
    "    </table>",
    "  </div>",
    "  <!-- END: Report Selection Sidebar -->",
    "  ",
    "  <!-- Selected Report Body -->",
    "  <div [ngClass]=\"{'col-sm-9': !bezl.vars.reportSelected, 'col-sm-12': bezl.vars.reportSelected}\">",
    "    ",
    "    <nav class=\"navbar navbar-default\">",
    "      <div class=\"container-fluid\">",
    "        <div class=\"collapse navbar-collapse\">",
    "          <ul class=\"nav navbar-nav\">",
    "            <li><h4>  {{bezl.vars.selectedReport.BaseName}}</h4></li>",
    "          </ul>",
    "          <ul class=\"nav navbar-nav navbar-right\">",
    "            <li>",
    "              <div class=\"btn-group\"",
    "                   *ngIf=\"!bezl.vars.reportLoading && bezl.vars.selectedReport.BaseName\"",
    "                   style=\"margin-top:8px\">",
    "                <button class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" type=\"button\">",
    "                  Save As...<i class=\"dropdown-caret\"></i>",
    "                </button>",
    "                <ul class=\"dropdown-menu dropdown-menu-right\">",
    "                  <li class=\"dropdown-header\">PDF</li>",
    "                  <li><a (click)=\"bezl.functions['saveReport']({selectedReport:bezl.vars.selectedReport, saveAs:'Adobe Acrobat (PDF)'})\">Adobe Acrobat (PDF)</a></li>",
    "                  <li class=\"divider\"></li>",
    "                  <li class=\"dropdown-header\">Excel</li>",
    "                  <li><a (click)=\"bezl.functions['saveReport']({selectedReport:bezl.vars.selectedReport, saveAs:'Microsoft Excel 97-2000 (XLS)'})\">Microsoft Excel 97-2000 (XLS)</a></li>",
    "                  <li><a (click)=\"bezl.functions['saveReport']({selectedReport:bezl.vars.selectedReport, saveAs:'Microsoft Excel 97-2000 - Data Only (XLS)'})\">Microsoft Excel 97-2000 - Data Only (XLS)</a></li>",
    "                  <li><a (click)=\"bezl.functions['saveReport']({selectedReport:bezl.vars.selectedReport, saveAs:'Microsoft Excel Workbook Data-Only (XLSX)'})\">Microsoft Excel Workbook Data-Only (XLSX)</a></li>",
    "                  <li class=\"divider\"></li>",
    "                  <li class=\"dropdown-header\">Word</li>",
    "                  <li><a (click)=\"bezl.functions['saveReport']({selectedReport:bezl.vars.selectedReport, saveAs:'Microsoft Word (DOC)'})\">Microsoft Word (DOC)</a></li>",
    "                  <li class=\"divider\"></li>",
    "                  <li class=\"dropdown-header\">Other</li>",
    "                  <li><a (click)=\"bezl.functions['saveReport']({selectedReport:bezl.vars.selectedReport, saveAs:'Rich Text Format (RTF)'})\">Rich Text Format (RTF)</a></li>",
    "                  <li><a (click)=\"bezl.functions['saveReport']({selectedReport:bezl.vars.selectedReport, saveAs:'Separated Values (CSV)'})\">Separated Values (CSV)</a></li>",
    "                  <li><a (click)=\"bezl.functions['saveReport']({selectedReport:bezl.vars.selectedReport, saveAs:'Extensible Markup Language (XML)'})\">Extensible Markup Language (XML)</a></li>",
    "                </ul>",
    "              </div>",
    "            </li>",
    "            <li><button class=\"btn btn-default\" style=\"margin-top:8px\"",
    "                        *ngIf=\"!bezl.vars.reportLoading && bezl.vars.selectedReport.BaseName\"",
    "                        (click)=\"bezl.functions['runReport'](bezl.vars.selectedReport)\">",
    "              <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i> Refresh</button></li>",
    "            <li><button class=\"btn btn-default\" style=\"margin-top:8px\"",
    "                        *ngIf=\"!bezl.vars.reportLoading && bezl.vars.selectedReport ",
    "              \t\t\t&& bezl.vars.selectedReport.ReportDetails.ParameterFields.length > 0\"",
    "                        (click)=\"bezl.functions['updateParameters'](bezl.vars.selectedReport)\">",
    "              <i class=\"fa fa-question\" aria-hidden=\"true\"></i> Update Parameters</button></li>",
    "            <li><button class=\"btn btn-default\" style=\"margin-top:8px\"",
    "                        *ngIf=\"bezl.vars.reportSelected\"",
    "                        (click)=\"bezl.functions['back']()\">",
    "              <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Back</button></li>",
    "            <li><label class=\"pull-right\" style=\"margin-top:8px;margin-left:10px\"",
    "                       [hidden]=\"!bezl.vars.reportLoading || bezl.vars.promptForParameters\">Loading... ",
    "              <i class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i>",
    "              </label>",
    "            </li>",
    "          </ul>",
    "        </div><!-- /.navbar-collapse -->",
    "      </div><!-- /.container-fluid -->",
    "    </nav>",
    "    ",
    "    <h3 *ngIf=\"!bezl.vars.reportSelected\">No Report Selected</h3>",
    "        ",
    "    <!-- Parameter Input -->",
    "    <div class=\"row\" ",
    "         *ngFor=\"let param of bezl.vars.selectedReport.ReportDetails.ParameterFields\"",
    "         [hidden]=\"!bezl.vars.promptForParameters\">",
    "      <div *ngIf=\"param.ReportName == ''\">",
    "",
    "        <div class=\"panel panel-default\">",
    "          <div class=\"panel-heading\">",
    "            <h5 class=\"panel-title\">{{param.PromptText}}</h5>",
    "          </div>",
    "          <div class=\"panel-body\">",
    "            ",
    "            <!-- Single Value  -->",
    "            <div *ngIf=\"!param.EnableAllowMultipleValue && ",
    "                        param.DefaultValues.length == 0 &&",
    "                        param.DiscreteOrRangeKind == 0\">",
    "              <div class=\"row\">",
    "                <div class=\"col-sm-12\">",
    "                  <!-- String input -->",
    "                  <input class=\"form-control\" type=\"text\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value\"",
    "                         *ngIf=\"param.ParameterValueType == 4\">",
    "                  ",
    "                  <!-- Date input -->",
    "                  <input class=\"form-control\" type=\"date\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value\"",
    "                         *ngIf=\"param.ParameterValueType == 3\"> ",
    "                  ",
    "                  <!-- Number input -->",
    "                  <input class=\"form-control\" type=\"number\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value\"",
    "                         *ngIf=\"param.ParameterValueType == 0 || param.ParameterValueType == 1\">",
    "                  ",
    "                  <!-- Boolean input -->",
    "                  <input class=\"form-control\" type=\"checkbox\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value\"",
    "                         *ngIf=\"param.ParameterValueType == 2\">",
    "                  ",
    "                  <!-- DateTime input -->",
    "                  <input class=\"form-control\" type=\"datetime-local\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value\"",
    "                         *ngIf=\"param.ParameterValueType == 5\"> ",
    "                  ",
    "                  <!-- Time input -->",
    "                  <input class=\"form-control\" type=\"time\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value\"",
    "                         *ngIf=\"param.ParameterValueType == 6\"> ",
    "                </div>",
    "              </div>",
    "              <button (click)=\"param.Value = ''\" class=\"btn btn-md btn-default\" style=\"width:100%;margin-top:5px\">Clear</button>",
    "            </div>",
    "            <!-- END: Single Value -->",
    "            ",
    "            <!-- Single Value / Default Values / No Custom -->",
    "            <div *ngIf=\"!param.EnableAllowMultipleValue && ",
    "                        !param.AllowCustomValues && ",
    "                        param.DefaultValues.length > 0 &&",
    "                        param.DiscreteOrRangeKind == 0\">",
    "              <div class=\"row\">",
    "                <div class=\"col-sm-12\">",
    "                  <select class=\"form-control\" [(ngModel)]=\"param.Value\" [required]=\"!param.IsOptionalPrompt\">",
    "                    <option *ngFor=\"let item of param.DefaultValues\" [value]=\"item.Value\">{{item.Value}}</option>",
    "                  </select>",
    "                </div>",
    "              </div>",
    "              <button (click)=\"param.Value = '';param.AddValue = ''\" class=\"btn btn-md btn-default\" style=\"width:100%;margin-top:5px\">Clear</button>",
    "            </div>",
    "            <!-- END: Single Value / Default Values / No Custom -->",
    "            ",
    "            <!-- String Parameter / Single Value / Default Values / Allow Custom -->",
    "            <div *ngIf=\"!param.EnableAllowMultipleValue && ",
    "                        param.AllowCustomValues && ",
    "                        param.DefaultValues.length > 0 &&",
    "                        param.DiscreteOrRangeKind == 0\">",
    "              <div class=\"row\">",
    "                <div class=\"col-sm-6\">",
    "                  <select class=\"form-control\" [(ngModel)]=\"param.Value\" [required]=\"!param.IsOptionalPrompt\">",
    "                    <option *ngFor=\"let item of param.DefaultValues\" [value]=\"item.Value\">{{item.Value}}</option>",
    "                  </select>",
    "                </div>",
    "                <div class=\"col-sm-6\">                  ",
    "                  <!-- String input -->",
    "                  <input class=\"form-control\" type=\"text\" placeholder=\"Other Value\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value\"",
    "                         *ngIf=\"param.ParameterValueType == 4\">",
    "                  ",
    "                  <!-- Date input -->",
    "                  <input class=\"form-control\" type=\"date\" placeholder=\"Other Value\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value\"",
    "                         *ngIf=\"param.ParameterValueType == 3\"> ",
    "                  ",
    "                  <!-- Number input -->",
    "                  <input class=\"form-control\" type=\"number\" placeholder=\"Other Value\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value\"",
    "                         *ngIf=\"param.ParameterValueType == 0 || param.ParameterValueType == 1\">",
    "                  ",
    "                  <!-- Boolean input -->",
    "                  <input class=\"form-control\" type=\"checkbox\" placeholder=\"Other Value\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value\"",
    "                         *ngIf=\"param.ParameterValueType == 2\">",
    "                  ",
    "                  <!-- DateTime input -->",
    "                  <input class=\"form-control\" type=\"datetime-local\" placeholder=\"Other Value\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value\"",
    "                         *ngIf=\"param.ParameterValueType == 5\"> ",
    "                  ",
    "                  <!-- Time input -->",
    "                  <input class=\"form-control\" type=\"time\" placeholder=\"Other Value\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value\"",
    "                         *ngIf=\"param.ParameterValueType == 6\"> ",
    "                </div>",
    "              </div>",
    "              <button (click)=\"param.Value = '';param.AddValue = ''\" class=\"btn btn-md btn-default\" style=\"width:100%;margin-top:5px\">Clear</button>",
    "            </div>",
    "            <!-- END: String Parameter / Single Value / Default Values / Allow Custom -->",
    "",
    "            <!-- String Parameter / Multi Value -->",
    "            <div *ngIf=\"param.ParameterValueType == 4 && ",
    "                        param.EnableAllowMultipleValue &&",
    "                        param.DiscreteOrRangeKind == 0\">",
    "              <div class=\"row\">",
    "                <div class=\"col-sm-5\">",
    "                  <select class=\"form-control\" [(ngModel)]=\"param.AddValue\" ",
    "                          (change)=\"bezl.functions['addParameterValue'](param)\"",
    "                          [required]=\"!param.IsOptionalPrompt\" >",
    "                    <option *ngFor=\"let item of param.DefaultValues\" [value]=\"item.Value\">{{item.Value}}</option>",
    "                  </select>   ",
    "                </div>",
    "                <div class=\"col-sm-5\">               ",
    "                  <!-- String input -->",
    "                  <input class=\"form-control\" type=\"text\" placeholder=\"Other Value\"",
    "                         [required]=\"!param.IsOptionalPrompt && param.Value.length == 0\" ",
    "                         [(ngModel)]=\"param.AddValue\"",
    "                         *ngIf=\"param.ParameterValueType == 4\"",
    "                         (keyup.enter)=\"bezl.functions['addParameterValue'](param)\">",
    "                  ",
    "                  <!-- Date input -->",
    "                  <input class=\"form-control\" type=\"date\" placeholder=\"Other Value\"",
    "                         [required]=\"!param.IsOptionalPrompt && param.Value.length == 0\" ",
    "                         [(ngModel)]=\"param.AddValue\"",
    "                         *ngIf=\"param.ParameterValueType == 3\"> ",
    "                  ",
    "                  <!-- Number input -->",
    "                  <input class=\"form-control\" type=\"number\" placeholder=\"Other Value\"",
    "                         [required]=\"!param.IsOptionalPrompt && param.Value.length == 0\" ",
    "                         [(ngModel)]=\"param.AddValue\"",
    "                         *ngIf=\"param.ParameterValueType == 0 || param.ParameterValueType == 1\"",
    "                         (keyup.enter)=\"bezl.functions['addParameterValue'](param)\">",
    "                  ",
    "                  <!-- Boolean input -->",
    "                  <input class=\"form-control\" type=\"checkbox\" placeholder=\"Other Value\"",
    "                         [required]=\"!param.IsOptionalPrompt && param.Value.length == 0\" ",
    "                         [(ngModel)]=\"param.AddValue\"",
    "                         *ngIf=\"param.ParameterValueType == 2\">",
    "                  ",
    "                  <!-- DateTime input -->",
    "                  <input class=\"form-control\" type=\"datetime-local\" placeholder=\"Other Value\"",
    "                         [required]=\"!param.IsOptionalPrompt && param.Value.length == 0\" ",
    "                         [(ngModel)]=\"param.AddValue\"",
    "                         *ngIf=\"param.ParameterValueType == 5\"> ",
    "                  ",
    "                  <!-- Time input -->",
    "                  <input class=\"form-control\" type=\"time\" placeholder=\"Other Value\"",
    "                         [required]=\"!param.IsOptionalPrompt && param.Value.length == 0\" ",
    "                         [(ngModel)]=\"param.AddValue\"",
    "                         *ngIf=\"param.ParameterValueType == 6\"> ",
    "                  ",
    "                </div>",
    "                <div class=\"col-sm-2\">",
    "                  <button (click)=\"bezl.functions['addParameterValue'](param)\" class=\"btn btn-md btn-default\" style=\"width:100%;height:28px\">",
    "                    <i class=\"fa fa-plus-square-o\" aria-hidden=\"true\"></i>",
    "                  </button>",
    "                </div>",
    "              </div>",
    "              <div class=\"row\" *ngFor=\"let v of param.Value; let i = index;\">",
    "                <div class=\"col-sm-10\">",
    "                  <input class=\"form-control\" type=\"text\" [(ngModel)]=\"param.Value[i]\" readonly>",
    "                </div>",
    "                <div class=\"col-sm-2\">",
    "                  <button (click)=\"param.Value.splice(i,1)\" class=\"btn btn-md btn-default\" style=\"width:100%;height:28px\">",
    "                    <i class=\"fa fa-minus-square-o\" aria-hidden=\"true\"></i>",
    "                  </button>",
    "                </div>",
    "              </div>",
    "",
    "              <button (click)=\"param.Value.splice(0)\" class=\"btn btn-md btn-default\" style=\"width:100%;margin-top:5px\">Remove All</button>",
    "            </div>",
    "            <!-- END: String Parameter / Multi Value -->",
    "            ",
    "            <!-- String Parameter / Range / Single Value  -->",
    "            <div *ngIf=\"!param.EnableAllowMultipleValue && ",
    "                        param.DefaultValues.length == 0 &&",
    "                        param.DiscreteOrRangeKind == 1\">",
    "              <div class=\"row\">",
    "                <div class=\"col-sm-6\">                 ",
    "                  <!-- String input -->",
    "                  <input class=\"form-control\" type=\"text\" placeholder=\"From\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value.StartValue\"",
    "                         *ngIf=\"param.ParameterValueType == 4\">",
    "                  ",
    "                  <!-- Date input -->",
    "                  <input class=\"form-control\" type=\"date\" placeholder=\"From\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value.StartValue\"",
    "                         *ngIf=\"param.ParameterValueType == 3\"> ",
    "                  ",
    "                  <!-- Number input -->",
    "                  <input class=\"form-control\" type=\"number\" placeholder=\"From\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value.StartValue\"",
    "                         *ngIf=\"param.ParameterValueType == 0 || param.ParameterValueType == 1\">",
    "                  ",
    "                  <!-- Boolean input -->",
    "                  <input class=\"form-control\" type=\"checkbox\" placeholder=\"From\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value.StartValue\"",
    "                         *ngIf=\"param.ParameterValueType == 2\">",
    "                  ",
    "                  <!-- DateTime input -->",
    "                  <input class=\"form-control\" type=\"datetime-local\" placeholder=\"From\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value.StartValue\"",
    "                         *ngIf=\"param.ParameterValueType == 5\"> ",
    "                  ",
    "                  <!-- Time input -->",
    "                  <input class=\"form-control\" type=\"time\" placeholder=\"From\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value.StartValue\"",
    "                         *ngIf=\"param.ParameterValueType == 6\"> ",
    "                  ",
    "                </div>",
    "                <div class=\"col-sm-6\">                 ",
    "                  <!-- String input -->",
    "                  <input class=\"form-control\" type=\"text\" placeholder=\"To\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value.EndValue\"",
    "                         *ngIf=\"param.ParameterValueType == 4\">",
    "                  ",
    "                  <!-- Date input -->",
    "                  <input class=\"form-control\" type=\"date\" placeholder=\"To\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value.EndValue\"",
    "                         *ngIf=\"param.ParameterValueType == 3\"> ",
    "                  ",
    "                  <!-- Number input -->",
    "                  <input class=\"form-control\" type=\"number\" placeholder=\"To\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value.EndValue\"",
    "                         *ngIf=\"param.ParameterValueType == 0 || param.ParameterValueType == 1\">",
    "                  ",
    "                  <!-- Boolean input -->",
    "                  <input class=\"form-control\" type=\"checkbox\" placeholder=\"To\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value.EndValue\"",
    "                         *ngIf=\"param.ParameterValueType == 2\">",
    "                  ",
    "                  <!-- DateTime input -->",
    "                  <input class=\"form-control\" type=\"datetime-local\" placeholder=\"To\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value.EndValue\"",
    "                         *ngIf=\"param.ParameterValueType == 5\"> ",
    "                  ",
    "                  <!-- Time input -->",
    "                  <input class=\"form-control\" type=\"time\" placeholder=\"To\"",
    "                         [required]=\"!param.IsOptionalPrompt\" ",
    "                         [(ngModel)]=\"param.Value.EndValue\"",
    "                         *ngIf=\"param.ParameterValueType == 6\"> ",
    "                </div>",
    "              </div>",
    "              <button (click)=\"param.Value = '';param.Value.StartValue = '';param.Value.EndValue = ''\" class=\"btn btn-md btn-default\" style=\"width:100%;margin-top:5px\">Clear</button>",
    "            </div>",
    "            <!-- END: String Parameter / Single Value / Dynamic -->",
    "            ",
    "          </div>",
    "        </div>",
    "      </div>",
    "    </div>",
    "    ",
    "    <div [hidden]=\"!bezl.vars.promptForParameters\">",
    "      <div class=\"btn-group btn-group-justified\" role=\"group\" aria-label=\"Justified button group\">",
    "        <div class=\"btn-group\" role=\"group\">",
    "          <button (click)=\"bezl.functions['runReport'](bezl.vars.selectedReport)\" ",
    "                  class=\"btn btn-md btn-default\">Ok</button>",
    "        </div>",
    "        <div class=\"btn-group\" role=\"group\">",
    "          <button (click)=\"bezl.vars.reportSelected=false\" class=\"btn btn-md btn-default\">Cancel</button>",
    "        </div>      ",
    "      </div>",
    "    </div>",
    "    <!-- END: Parameter Input -->",
    "    ",
    "    <!-- Report Output -->",
    "    <div id=\"reports-container\" class=\"ng-scope pdfobject-container\" [hidden]=\"!bezl.vars.reportSelected || bezl.vars.promptForParameters\">",
    "        <iframe id=\"viewer\" src=\"\" type=\"application/pdf\" height=800 style=\"overflow: auto; width: 100%;\">",
    "        </iframe>",
    "    </div>",
    "    <!-- END: Report Output -->",
    "    ",
    "  </div>",
    "  <!-- END: Selected Report Body -->",
    "  ",
    "</div>",
    "",
    "",
    "",
    ""
  ],
  "functions": [
    {
      "method": "ngOnInit",
      "code": "bezl.vars.selectedReport = { \"ReportDetails\" : { \"ParameterFields\" : [] } };\n\nbezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'onStartup.js'], function(functions) {\n\tfunctions.onStartup(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts",
        "flatpickr"
      ],
      "compiled": "bezl.vars.selectedReport = { \"ReportDetails\": { \"ParameterFields\": [] } };\r\nbezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'onStartup.js'], function (functions) {\r\n    functions.onStartup(bezl);\r\n});\r\n"
    },
    {
      "method": "onDataChange",
      "code": "bezl.data = dataResp;\n\nbezl.functions['setConfig']();\nrequire([bezl.vars.config.baseJsUrl + 'onDataChange.js'], function(functions) {\n\tfunctions.onDataChange(bezl)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.data = dataResp;\r\nbezl.functions['setConfig']();\r\nrequire([bezl.vars.config.baseJsUrl + 'onDataChange.js'], function (functions) {\r\n    functions.onDataChange(bezl);\r\n});\r\n"
    },
    {
      "method": "runReport",
      "code": "require([bezl.vars.config.baseJsUrl + 'report.js'], function(functions) {\n\tfunctions.runReport(bezl, parm)\n});\n\n",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'report.js'], function (functions) {\r\n    functions.runReport(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "addParameterValue",
      "code": "require([bezl.vars.config.baseJsUrl + 'report.js'], function(functions) {\n\tfunctions.addParameterValue(bezl, parm)\n});\n\n",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'report.js'], function (functions) {\r\n    functions.addParameterValue(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "back",
      "code": "require([bezl.vars.config.baseJsUrl + 'report.js'], function(functions) {\n\tfunctions.back(bezl)\n});\n\n",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'report.js'], function (functions) {\r\n    functions.back(bezl);\r\n});\r\n"
    },
    {
      "method": "updateParameters",
      "code": "bezl.vars['promptForParameters'] = true;",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.vars['promptForParameters'] = true;\r\n"
    },
    {
      "method": "setConfig",
      "code": "bezl.vars.config = {};\n\n// *********************************************************************************\n// Configuration Variables\n// Only edit these if you know what you are doing.\n// version: The version number of this app. Setting this vill use the javascript\n//          include files in the corresponding \"versions\" subfolder. An empty string\n//          will use the \"development\" javascript files in the root directory.\n// libVersion: The version number of the library javascript include files to use.\n// baseUrl: The base URL of the javascript include files. Generally this should be an\n//          empty string and the correct path will be automatically determined.\n//          However, for development you may wish to point this to a RawGit URL of\n//          a specific branch (e.g. https://rawgit.com/bezlio/bezlio-apps/my-branch).\nbezl.vars.config.version = \"1.2\";\nbezl.vars.config.libVersion = \"1.1\";\nbezl.vars.config.baseUrl = \"\";\n// *********************************************************************************\n\n// If the baseURL is not set above then we will determine a sane default based on the URL\nif (bezl.vars.config.baseUrl == \"\") {\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\n        bezl.vars.config.baseUrl = \"https://apps-dev.bezl.io\";\n    } else {\n        bezl.vars.config.baseUrl = \"https://apps.bezl.io\";\n    }\n}\n\n// If version numbers exist above they will also be added to the javascript include URLs\nbezl.vars.config.baseJsUrl = bezl.vars.config.baseUrl\n  \t\t\t\t\t\t\t+ \"/roles/common/crystal-reports-viewer/\"\n  \t\t\t\t\t\t\t+ (bezl.vars.config.version ? \"versions/\" + bezl.vars.config.version + \"/\" : \"\")\n  \t\t\t\t\t\t\t+ \"js/\"\nbezl.vars.config.baseLibraryUrl = bezl.vars.config.baseUrl\n  \t\t\t\t\t\t\t+ \"/libraries/\"\n\t\t\t\t\t\t\t+ (bezl.vars.config.libVersion ? \"versions/\" + bezl.vars.config.libVersion + \"/\" : \"\")",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.vars.config = {};\r\n// *********************************************************************************\r\n// Configuration Variables\r\n// Only edit these if you know what you are doing.\r\n// version: The version number of this app. Setting this vill use the javascript\r\n//          include files in the corresponding \"versions\" subfolder. An empty string\r\n//          will use the \"development\" javascript files in the root directory.\r\n// libVersion: The version number of the library javascript include files to use.\r\n// baseUrl: The base URL of the javascript include files. Generally this should be an\r\n//          empty string and the correct path will be automatically determined.\r\n//          However, for development you may wish to point this to a RawGit URL of\r\n//          a specific branch (e.g. https://rawgit.com/bezlio/bezlio-apps/my-branch).\r\nbezl.vars.config.version = \"1.2\";\r\nbezl.vars.config.libVersion = \"1.1\";\r\nbezl.vars.config.baseUrl = \"\";\r\n// *********************************************************************************\r\n// If the baseURL is not set above then we will determine a sane default based on the URL\r\nif (bezl.vars.config.baseUrl == \"\") {\r\n    if (window.location.href.indexOf(\"portal-dev.bezl.io\") !== -1) {\r\n        bezl.vars.config.baseUrl = \"https://apps-dev.bezl.io\";\r\n    }\r\n    else {\r\n        bezl.vars.config.baseUrl = \"https://apps.bezl.io\";\r\n    }\r\n}\r\n// If version numbers exist above they will also be added to the javascript include URLs\r\nbezl.vars.config.baseJsUrl = bezl.vars.config.baseUrl + \"/roles/common/crystal-reports-viewer/\" + (bezl.vars.config.version ? \"versions/\" + bezl.vars.config.version + \"/\" : \"\") + \"js/\";\r\nbezl.vars.config.baseLibraryUrl = bezl.vars.config.baseUrl + \"/libraries/\" + (bezl.vars.config.libVersion ? \"versions/\" + bezl.vars.config.libVersion + \"/\" : \"\");\r\n"
    },
    {
      "method": "sort",
      "code": "require([bezl.vars.config.baseJsUrl + 'report.js'], function(functions) {\n\tfunctions.sort(bezl, parm)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'report.js'], function (functions) {\r\n    functions.sort(bezl, parm);\r\n});\r\n"
    },
    {
      "method": "refresh",
      "code": "bezl.vars.reportListingLoading = true;\nbezl.vars.sort = \"\";\nbezl.vars.sortCol = \"\";\nbezl.dataService.process('ReportListing')",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.vars.reportListingLoading = true;\r\nbezl.vars.sort = \"\";\r\nbezl.vars.sortCol = \"\";\r\nbezl.dataService.process('ReportListing');\r\n"
    },
    {
      "method": "saveReport",
      "code": "require([bezl.vars.config.baseJsUrl + 'report.js'], function(functions) {\n\tfunctions.saveReport(bezl, parm.selectedReport, parm.saveAs)\n});",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "require([bezl.vars.config.baseJsUrl + 'report.js'], function (functions) {\r\n    functions.saveReport(bezl, parm.selectedReport, parm.saveAs);\r\n});\r\n"
    }
  ],
  "data": ""
}
