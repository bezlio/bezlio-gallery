{
  "id": "7f8433b2-714b-4da4-82bd-1482b2536539",
  "name": "AP Summary",
  "template": "custom",
  "owner": "aellis@saberlogic.com",
  "shares": [],
  "vars": [],
  "dataSubscriptions": [
    {
      "name": "SummaryData",
      "connectionId": "b9084b1e-48b6-45e7-a5e3-d68fe28f7d70",
      "dataSource": "brdb",
      "plugin": "ExcelPlugin",
      "method": "GetData",
      "args": {
        "FileName": "C:\\Program Files (x86)\\Bezlio Remote Data Broker\\Data\\accounts-payable.xlsx",
        "SheetName": "Accounts Payable",
        "FirstRowColumnNames": "Yes"
      },
      "data": null,
      "refreshInverval": 0,
      "lastRefresh": null
    }
  ],
  "markup": [
    "<!-- Here is where the total AP is output.  Only visible when it has a value. -->",
    "<span style=\"font-size: 400%; color: grey; font-weight:bold; margin-right: 10px\" *ngIf=\"bezl.vars.totalAp\">{{bezl.vars.totalAp | currency:'USD':true:'1.0-0'}}</span>",
    "",
    "<!-- Loading / refresh icon.  Only available if it isn't currently loading -->",
    "<i *ngIf=\"!bezl.vars.loadingSummaryData\" ",
    "   style=\"cursor: pointer; cursor: hand;color: grey;font-size: 200%;\" class=\"fa fa-refresh\" ",
    "   (click)=\"bezl.functions['refresh']('SummaryData')\"></i>",
    "",
    "<!-- Loading icon.  Spinning to show the data is loading -->",
    "<i *ngIf=\"bezl.vars.loadingSummaryData\" ",
    "   style=\"cursor: not-allowed;color: grey;font-size: 200%;\" class=\"fa fa-refresh fa-spin\"></i>",
    ""
  ],
  "functions": [
    {
      "method": "ngOnInit",
      "code": "bezl.vars.loadingSummaryData = true;",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.vars.loadingSummaryData = true;\r\n"
    },
    {
      "method": "onDataChange",
      "code": "bezl.data = dataResp;\n\n\n// Dealing with the result data when it comes back\nif (bezl.data.SummaryData != null && bezl.data.SummaryData.length > 0) {\n  // Loop through the results and build the data\n  bezl.vars.totalAp = 0;\n  bezl.data.SummaryData.forEach(d => { \n    bezl.vars.totalAp += d.AmountDue;\n  }); \n  \n  bezl.vars.loadingSummaryData = false;\n}",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.data = dataResp;\r\n// Dealing with the result data when it comes back\r\nif (bezl.data.SummaryData != null && bezl.data.SummaryData.length > 0) {\r\n    // Loop through the results and build the data\r\n    bezl.vars.totalAp = 0;\r\n    bezl.data.SummaryData.forEach(function (d) {\r\n        bezl.vars.totalAp += d.AmountDue;\r\n    });\r\n    bezl.vars.loadingSummaryData = false;\r\n}\r\n"
    },
    {
      "method": "refresh",
      "code": "bezl.vars.loadingSummaryData = true;\nbezl.dataService.process('SummaryData');",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.vars.loadingSummaryData = true;\r\nbezl.dataService.process('SummaryData');\r\n"
    }
  ],
  "data": ""
}