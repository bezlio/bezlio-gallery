{
  "id": "7727bd6e-caad-49f4-b2a4-86dda9b990cb",
  "name": "Virtual Warehouse",
  "template": "custom",
  "owner": "bellis@saberlogic.com",
  "shares": [
    "Login:kcleveland@saberlogic.com"
  ],
  "vars": [
    {
      "name": "dialogVisible",
      "value": "false"
    },
    {
      "name": "cubes",
      "value": "[]"
    },
    {
      "name": "typeAheadData",
      "value": "[]"
    },
    {
      "name": "inventory",
      "value": "\"\""
    },
    {
      "name": "refreshing",
      "value": "true"
    }
  ],
  "dataSubscriptions": [
    {
      "name": "Layout",
      "connectionId": "a2d174a1-7c29-45fd-8f39-2d62f2727e8f",
      "dataSource": "brdb",
      "plugin": "ExcelPlugin",
      "method": "GetData",
      "args": {
        "FileName": "c:\\Program Files (x86)\\Bezlio Remote Data Broker\\Data\\warehouse-layout.xlsx",
        "SheetName": "Layout",
        "FirstRowColumnNames": "No"
      },
      "data": null,
      "refreshInverval": 0,
      "lastRefresh": null
    },
    {
      "name": "Inventory",
      "connectionId": "a2d174a1-7c29-45fd-8f39-2d62f2727e8f",
      "dataSource": "brdb",
      "plugin": "ExcelPlugin",
      "method": "GetData",
      "args": {
        "FileName": "c:\\Program Files (x86)\\Bezlio Remote Data Broker\\Data\\warehouse-parts.xlsx",
        "SheetName": "Inventory",
        "FirstRowColumnNames": "Yes"
      },
      "data": null,
      "refreshInverval": 0,
      "lastRefresh": null
    }
  ],
  "markup": [
    "<style>",
    "  .3dnav {",
    "    background-color: Transparent;",
    "    background-repeat:no-repeat;",
    "    border: none;",
    "    cursor:pointer;",
    "    overflow: hidden;",
    "    outline:none;",
    "}",
    "</style>",
    "",
    "<div class=\"row\">",
    "    <div class=\"typeahead__container\">",
    "      <div class=\"typeahead__field\">",
    "        <span class=\"typeahead__query\">",
    "          <input class=\"js-typeahead\" name=\"q\" type=\"search\" autocomplete=\"off\" [disabled]=\"bezl.vars['typeAheadData'].length == 0\">",
    "        </span>   ",
    "        <span class=\"typeahead__button\">",
    "          <button style=\"padding-left: 2px; padding-right: 2px;\">",
    "            <i *ngIf=\"bezl.vars.refreshing === false\" style=\"width:20px; height: 20px; font-size:20px; cursor: pointer; cursor: hand;\" class=\"fa fa-refresh\" (click)=\"bezl.functions['refresh']()\"></i>",
    "            <i *ngIf=\"bezl.vars.refreshing === true\" style=\"width:20px; height: 20px; font-size:20px; cursor: not-allowed;\" class=\"fa fa-refresh fa-spin\"></i>",
    "          </button>",
    "        </span>",
    "      </div>",
    "    </div>",
    "</div>",
    "",
    "<div class=\"row\">",
    "",
    "  <button (click)=\"bezl.functions['move'](0)\" ",
    "          class=\"btn 3dnav\" ",
    "          style=\"height:300px;z-index:10; margin-top:150px;position:absolute;\">",
    "    <i class=\"fa fa-angle-left fa-5x\" aria-hidden=\"true\"></i>",
    "  </button>",
    "",
    "",
    "  <button (click)=\"bezl.functions['move'](1)\" ",
    "          class=\"btn 3dnav\" ",
    "          style=\"height:300px;z-index:10; margin-top:150px;position:absolute;\"  [style.left.px]=\"bezl.vars.width-25\">",
    "    <i class=\"fa fa-angle-right fa-5x\" aria-hidden=\"true\"></i>",
    "  </button>",
    "",
    "",
    "  <div id=\"scene-container\">",
    "",
    "  </div>",
    "</div>",
    ""
  ],
  "functions": [
    {
      "method": "ngOnInit",
      "code": "bezl.vars.height = Math.floor(window.innerHeight) * .8;\nbezl.vars.width = Math.floor(window.innerWidth) *.85;\n\nvar scene = document.createElement('a-scene');\nscene.setAttribute('embedded', 'true');\nscene.setAttribute('style', 'width:' + bezl.vars.width + 'px ;height:' + bezl.vars.height + 'px;');\nscene.setAttribute('vr-mode-ui', 'enabled: false');\n\nvar entity = document.createElement('a-entity');\nentity.setAttribute('id', 'camera');\nentity.setAttribute('position', '0 0 0');\n\nvar camera = document.createElement('a-camera');\nentity.appendChild(camera);\n\nscene.appendChild(entity);\n\nvar plane = document.createElement('a-plane');\nplane.setAttribute('position', '0 0 -4');\nplane.setAttribute('rotation', '-90 0 0');\nplane.setAttribute('width', '100');\nplane.setAttribute('height', '100');\nplane.setAttribute('color', '#7BC8A4');\n\nscene.appendChild(plane);\n\nvar sky = document.createElement('a-sky');\nsky.setAttribute('color', '#ECECEC');\nscene.appendChild(sky);\n\ndocument.getElementById('scene-container').appendChild(scene);\n\n$('.js-typeahead').typeahead({\n  order: \"asc\",\n  maxItem: 8,\n  display: [\"id\", \"description\"],\n  source: {\n    data: function() { return bezl.vars['typeAheadData']; }\n  },\n  callback: {\n    onClick: function (node, a, item, event) {\n      bezl.functions['typeAheadSelect'](item.id);\n    },\n    onCancel: function () {\n      bezl.vars['cubes'].forEach(c => {\n        c.obj.setAttribute('color', 'tomato');\n        c.obj.setAttribute('width', '.25');\n      });\n    }\n  }\n});\n\nbezl.functions.addCube = function(a, x, y, z) {\n  var sceneEl = document.querySelector('a-scene');\n  var entityEl = document.createElement('a-box');\n  entityEl.setAttribute('position', x + ' ' + y + ' ' + z);\n  entityEl.setAttribute('rotation', '0 0 0');\n  entityEl.setAttribute('color', 'tomato');\n  entityEl.setAttribute('width', '.25');\n  entityEl.setAttribute('height', '.25');\n  entityEl.setAttribute('depth', '.5');\n  sceneEl.appendChild(entityEl);\n  bezl.vars['cubes'].push({id: a, obj: entityEl});\n}\n\n//var scene = document.getElementById('ascene');\n",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.vars.height = Math.floor(window.innerHeight) * .8;\r\nbezl.vars.width = Math.floor(window.innerWidth) * .85;\r\nvar scene = document.createElement('a-scene');\r\nscene.setAttribute('embedded', 'true');\r\nscene.setAttribute('style', 'width:' + bezl.vars.width + 'px ;height:' + bezl.vars.height + 'px;');\r\nscene.setAttribute('vr-mode-ui', 'enabled: false');\r\nvar entity = document.createElement('a-entity');\r\nentity.setAttribute('id', 'camera');\r\nentity.setAttribute('position', '0 0 0');\r\nvar camera = document.createElement('a-camera');\r\nentity.appendChild(camera);\r\nscene.appendChild(entity);\r\nvar plane = document.createElement('a-plane');\r\nplane.setAttribute('position', '0 0 -4');\r\nplane.setAttribute('rotation', '-90 0 0');\r\nplane.setAttribute('width', '100');\r\nplane.setAttribute('height', '100');\r\nplane.setAttribute('color', '#7BC8A4');\r\nscene.appendChild(plane);\r\nvar sky = document.createElement('a-sky');\r\nsky.setAttribute('color', '#ECECEC');\r\nscene.appendChild(sky);\r\ndocument.getElementById('scene-container').appendChild(scene);\r\n$('.js-typeahead').typeahead({\r\n    order: \"asc\",\r\n    maxItem: 8,\r\n    display: [\"id\", \"description\"],\r\n    source: {\r\n        data: function () {\r\n            return bezl.vars['typeAheadData'];\r\n        }\r\n    },\r\n    callback: {\r\n        onClick: function (node, a, item, event) {\r\n            bezl.functions['typeAheadSelect'](item.id);\r\n        },\r\n        onCancel: function () {\r\n            bezl.vars['cubes'].forEach(function (c) {\r\n                c.obj.setAttribute('color', 'tomato');\r\n                c.obj.setAttribute('width', '.25');\r\n            });\r\n        }\r\n    }\r\n});\r\nbezl.functions.addCube = function (a, x, y, z) {\r\n    var sceneEl = document.querySelector('a-scene');\r\n    var entityEl = document.createElement('a-box');\r\n    entityEl.setAttribute('position', x + ' ' + y + ' ' + z);\r\n    entityEl.setAttribute('rotation', '0 0 0');\r\n    entityEl.setAttribute('color', 'tomato');\r\n    entityEl.setAttribute('width', '.25');\r\n    entityEl.setAttribute('height', '.25');\r\n    entityEl.setAttribute('depth', '.5');\r\n    sceneEl.appendChild(entityEl);\r\n    bezl.vars['cubes'].push({ id: a, obj: entityEl });\r\n};\r\n//var scene = document.getElementById('ascene');\r\n"
    },
    {
      "method": "onDataChange",
      "code": "bezl.data = dataResp;\n\nif (bezl.data.Layout) {\n  bezl.vars['cubes'] = [];\n  // Reverse it because we start the layout from the bottom\n  bezl.data.Layout = bezl.data.Layout.reverse();\n\n  var z = -2;\n  bezl.data.Layout.forEach(w => {\n    // Set our starting position\n    var x = -1;\n    var hadValue = false;\n\n    for (var property in w) {      \n      if (w.hasOwnProperty(property)) {\n        if (w[property] == 'xxx') {\n          hadValue = true;\n          x += .5;\n        } else if (w[property] != null) {\n          hadValue = true;\n          var ary = w[property].split('~');\n          var y = 0.5;\n          ary.forEach(a => {\n            bezl.functions.addCube(a, x, y, z);\n            y += .3;\n          });\n          x += .3;\n        } else {\n          // null\n        }\n      }\n    }\n    if (hadValue == true) {\n      z -= .6;\n    }\n  });\n  bezl.dataService.remove('Layout');\n}\n\nif (bezl.data.Inventory) {\n  bezl.vars['inventory'] = bezl.data.Inventory;\n  bezl.vars['inventory'].forEach(i => {\n  \tif (bezl.vars['typeAheadData'].findIndex(t => t.id == i.Id) == -1) {\n      bezl.vars['typeAheadData'].push({id: i.Id, description: i.Description});\n    }\n  });\n  bezl.vars['refreshing'] = false;\n}",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.data = dataResp;\r\nif (bezl.data.Layout) {\r\n    bezl.vars['cubes'] = [];\r\n    // Reverse it because we start the layout from the bottom\r\n    bezl.data.Layout = bezl.data.Layout.reverse();\r\n    var z = -2;\r\n    bezl.data.Layout.forEach(function (w) {\r\n        // Set our starting position\r\n        var x = -1;\r\n        var hadValue = false;\r\n        for (var property in w) {\r\n            if (w.hasOwnProperty(property)) {\r\n                if (w[property] == 'xxx') {\r\n                    hadValue = true;\r\n                    x += .5;\r\n                }\r\n                else if (w[property] != null) {\r\n                    hadValue = true;\r\n                    var ary = w[property].split('~');\r\n                    var y = 0.5;\r\n                    ary.forEach(function (a) {\r\n                        bezl.functions.addCube(a, x, y, z);\r\n                        y += .3;\r\n                    });\r\n                    x += .3;\r\n                }\r\n                else {\r\n                }\r\n            }\r\n        }\r\n        if (hadValue == true) {\r\n            z -= .6;\r\n        }\r\n    });\r\n    bezl.dataService.remove('Layout');\r\n}\r\nif (bezl.data.Inventory) {\r\n    bezl.vars['inventory'] = bezl.data.Inventory;\r\n    bezl.vars['inventory'].forEach(function (i) {\r\n        if (bezl.vars['typeAheadData'].findIndex(function (t) { return t.id == i.Id; }) == -1) {\r\n            bezl.vars['typeAheadData'].push({ id: i.Id, description: i.Description });\r\n        }\r\n    });\r\n    bezl.vars['refreshing'] = false;\r\n}\r\n"
    },
    {
      "method": "move",
      "code": "var camera = document.getElementById('camera');\nvar pos = camera.getAttribute('position');\n\nif (parm == 0) {\n  camera.setAttribute('position', (<any>pos).x-1 + ' 0 0');\n} else {\n  camera.setAttribute('position', (<any>pos).x+1 + ' 0 0');\n}",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "var camera = document.getElementById('camera');\r\nvar pos = camera.getAttribute('position');\r\nif (parm == 0) {\r\n    camera.setAttribute('position', pos.x - 1 + ' 0 0');\r\n}\r\nelse {\r\n    camera.setAttribute('position', pos.x + 1 + ' 0 0');\r\n}\r\n"
    },
    {
      "method": "typeAheadSelect",
      "code": "bezl.vars['cubes'].forEach(c => {\n  c.obj.setAttribute('color', 'tomato');\n  c.obj.setAttribute('width', '.25');\n});\n\nbezl.vars['inventory'].filter(i => i.Id == parm).forEach(i => {\n  bezl.vars['cubes'].filter(c => c.id == i.Bin).forEach(c => {\n  \tc.obj.setAttribute('color', 'yellow');\n    c.obj.setAttribute('width', '.35');\n  });\n});\n\nsetTimeout(function() {\n  (<any>document.activeElement).blur();\n});\n//var inputs = document.querySelectorAll('input');\n//for(var i=0; i < inputs.length; i++) {\n//  (<any>inputs[i]).blur();\n//}",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.vars['cubes'].forEach(function (c) {\r\n    c.obj.setAttribute('color', 'tomato');\r\n    c.obj.setAttribute('width', '.25');\r\n});\r\nbezl.vars['inventory'].filter(function (i) { return i.Id == parm; }).forEach(function (i) {\r\n    bezl.vars['cubes'].filter(function (c) { return c.id == i.Bin; }).forEach(function (c) {\r\n        c.obj.setAttribute('color', 'yellow');\r\n        c.obj.setAttribute('width', '.35');\r\n    });\r\n});\r\nsetTimeout(function () {\r\n    document.activeElement.blur();\r\n});\r\n//var inputs = document.querySelectorAll('input');\r\n//for(var i=0; i < inputs.length; i++) {\r\n//  (<any>inputs[i]).blur();\r\n//} \r\n"
    },
    {
      "method": "refresh",
      "code": "bezl.vars['refreshing'] = true;\n\nbezl.vars['cubes'].forEach(c => {\n  c.obj.setAttribute('color', 'tomato');\n  c.obj.setAttribute('width', '.25');\n});\n\nbezl.vars['typeAheadData'] = [];\nbezl.vars['inventory'] = [];\nbezl.dataService.process('Inventory');",
      "declares": [
        "$",
        "parm",
        "bezl",
        "dataResp",
        "require",
        "FusionCharts"
      ],
      "compiled": "bezl.vars['refreshing'] = true;\r\nbezl.vars['cubes'].forEach(function (c) {\r\n    c.obj.setAttribute('color', 'tomato');\r\n    c.obj.setAttribute('width', '.25');\r\n});\r\nbezl.vars['typeAheadData'] = [];\r\nbezl.vars['inventory'] = [];\r\nbezl.dataService.process('Inventory');\r\n"
    }
  ],
  "data": ""
}